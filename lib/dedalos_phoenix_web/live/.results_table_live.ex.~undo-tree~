(undo-tree-save-format-version . 1)
"b06d84de8a2caed9ad9b95d8a7acddad7c9aecb2"
[nil nil nil nil (25625 47062 853899 167000) 0 nil]
([nil nil ((#("    " 0 4 (fontified nil)) . 1516) (1516 . 1520) (1516 . 1517) (t 25625 46980 525351 785000)) nil (25625 47062 853891 824000) 0 nil])
([nil nil ((2116 . 2120) (#("    " 0 4 (fontified t)) . 2115) (undo-tree-id5 . -4) (2114 . 2120) (t 25625 47062 862113 946000)) nil (25625 48978 793426 803000) 0 nil])
([nil nil ((2121 . 2126) (2120 . 2122)) nil (25625 48978 793421 443000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2121) (undo-tree-id0 . -1) (#("e" 0 1 (fontified t)) . -2122) (undo-tree-id1 . -1) (#("p" 0 1 (fontified t)) . -2123) (undo-tree-id2 . -1) (#("l" 0 1 (fontified t)) . -2124) (undo-tree-id3 . -1) (#("y" 0 1 (fontified t)) . -2125) (undo-tree-id4 . -1) 2126) nil (25625 48978 793415 511000) 0 nil])
([nil nil ((2121 . 2131)) nil (25625 48978 793381 227000) 0 nil])
([nil nil ((2138 . 2146) (2131 . 2139)) nil (25625 48978 793378 442000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2167 . 2168) (nil fontified nil 2158 . 2168) (nil fontified nil 2146 . 2158) (2146 . 2168)) nil (25625 48978 793374 174000) 0 nil])
([nil nil ((apply -8 2019 2123 undo--wrap-and-run-primitive-undo 2019 2123 ((2095 . 2097) (2053 . 2055) (2038 . 2040) (2023 . 2025)))) nil (25625 48978 793365 759000) 0 nil])
([nil nil ((#("n" 0 1 (face elixir-atom-face fontified t)) . -2130) (undo-tree-id6 . -1) (#("o" 0 1 (face elixir-atom-face fontified t)) . -2131) (undo-tree-id7 . -1) 2132 (t 25625 48978 808997 326000)) nil (25625 49008 239693 981000) 0 nil])
([nil nil ((2175 . 2183)) nil (25625 49008 239668 644000) 0 nil])
([nil nil ((2184 . 2189) (t 25625 49008 252997 684000)) nil (25625 49026 791307 117000) 0 nil])
([nil nil ((2189 . 2191)) nil (25625 49026 791304 772000) 0 nil])
([nil nil ((2196 . 2203) (2191 . 2197)) nil (25625 49026 791302 718000) 0 nil])
([nil nil ((2200 . 2209) (#("ins" 0 3 (fontified t)) . -2200) (undo-tree-id9 . -3) 2203) nil (25625 49026 791299 492000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2207) (undo-tree-id8 . -1) (#("1" 0 1 (fontified t)) . -2208) 2209) nil (25625 49026 791292 229000) 0 nil])
([nil nil ((2207 . 2209)) nil (25625 49026 791276 329000) 0 nil])
([nil nil ((2208 . 2210)) nil (25625 49026 791268 935000) 0 nil])
([nil nil ((apply -4 2124 2216 undo--wrap-and-run-primitive-undo 2124 2216 ((2191 . 2193) (2128 . 2130))) (t 25625 49026 804997 910000)) nil (25626 108 925779 435000) 0 nil])
([nil nil ((2018 . 2027)) nil (25626 108 925778 423000) 0 nil])
([nil nil ((2027 . 2028)) nil (25626 108 925777 692000) 0 nil])
([nil nil ((2025 . 2033) (#("ins" 0 3 (fontified t)) . -2025) (undo-tree-id12 . -3) 2028) nil (25626 108 925776 860000) 0 nil])
([nil nil ((2033 . 2037)) nil (25626 108 925775 137000) 0 nil])
([nil nil ((2037 . 2039)) nil (25626 108 925774 25000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2038) (undo-tree-id11 . -1) 2039) nil (25626 108 925772 963000) 0 nil])
([nil nil ((2038 . 2039)) nil (25626 108 925771 200000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2038) (undo-tree-id10 . -1) 2039) nil (25626 108 925769 567000) 0 nil])
([nil nil ((2039 . 2040) (#(")" 0 1 (fontified nil)) . -2039) (2038 . 2040)) nil (25626 108 925755 982000) 0 nil])
([nil nil ((2018 . 2019) (t 25626 108 926260 777000)) nil (25626 14401 238610 682000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2018) (undo-tree-id13 . -1) 2019 (t 25626 14401 243198 483000)) nil (25626 14423 84267 337000) 0 nil])
([nil nil ((2021 . 2022) (t 25626 14423 86114 136000)) nil (25626 15220 306399 559000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2021) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2022) (undo-tree-id16 . -1) 2023 (t 25626 15220 307094 377000)) nil (25626 15232 864732 684000) 0 nil])
([nil nil ((2021 . 2022)) nil (25626 15232 864717 224000) 0 nil])
([nil nil ((1818 . 1819) (t 25626 15232 867631 295000)) nil (25626 15703 866658 501000) 0 nil])
([nil nil ((1903 . 1904)) nil (25626 15703 866650 937000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -1818) (undo-tree-id17 . -1) 1819 (t 25626 15703 875557 276000)) nil (25626 15836 986485 161000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -1902) (undo-tree-id18 . -1) 1903 (t 25626 15836 999590 827000)) nil (25626 15841 756912 450000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2045) (undo-tree-id22 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2046) (undo-tree-id23 . -1) 2047 (t 25626 15841 759862 400000)) nil (25626 16132 476273 98000) 0 nil])
([nil nil ((2045 . 2046)) nil (25626 16132 476269 751000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2059) (undo-tree-id21 . -1) 2060) nil (25626 16132 476268 509000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2073) (undo-tree-id20 . -1) 2074) nil (25626 16132 476266 445000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2114) (undo-tree-id19 . -1) 2115) nil (25626 16132 476263 349000) 0 nil])
([nil nil ((2140 . 2146)) nil (25626 16132 476252 258000) 0 nil])
([nil nil ((2147 . 2163) (2146 . 2148)) nil (25626 16132 476247 779000) 0 nil])
([nil nil ((2021 . 2022) (t 25626 16132 487243 199000)) nil (25626 16416 667049 287000) 0 nil])
([nil nil ((#("@" 0 1 (face elixir-attribute-face fontified t)) . -3655) (undo-tree-id24 . -1) 3656 (t 25626 16416 664831 966000)) nil (25626 16474 374895 664000) 0 nil])
([nil nil ((3592 . 3600) (t 25626 16474 381785 102000)) nil (25626 16616 659840 144000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3594) (undo-tree-id25 . -1) (#("o" 0 1 (fontified t)) . -3595) (undo-tree-id26 . -1) (#("c" 0 1 (fontified t)) . -3596) (undo-tree-id27 . -1) (#("k" 0 1 (fontified t)) . -3597) (undo-tree-id28 . -1) (#("e" 0 1 (fontified t)) . -3598) (undo-tree-id29 . -1) (#("t" 0 1 (fontified t)) . -3599) (undo-tree-id30 . -1) 3600 (t 25626 16616 664470 36000)) nil (25626 16663 583028 253000) 0 nil])
([nil nil ((3594 . 3601)) nil (25626 16663 583005 702000) 0 nil])
([nil nil ((3664 . 3665)) nil (25626 16663 583000 81000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3592) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -3593) (undo-tree-id32 . -1) (#("@" 0 1 (fontified t)) . -3594) (undo-tree-id33 . -1) (#("s" 0 1 (face elixir-attribute-face fontified t)) . -3595) (undo-tree-id34 . -1) (#("o" 0 1 (face elixir-attribute-face fontified t)) . -3596) (undo-tree-id35 . -1) (#("c" 0 1 (face elixir-attribute-face fontified t)) . -3597) (undo-tree-id36 . -1) (#("k" 0 1 (face elixir-attribute-face fontified t)) . -3598) (undo-tree-id37 . -1) (#("e" 0 1 (face elixir-attribute-face fontified t)) . -3599) (undo-tree-id38 . -1) (#("t" 0 1 (face elixir-attribute-face fontified t)) . -3600) (undo-tree-id39 . -1) 3601 (t 25626 16663 587300 360000)) nil (25626 16726 55083 438000) 0 nil])
([nil nil ((3592 . 3593)) nil (25626 16726 55050 868000) 0 nil])
([nil nil ((3597 . 3602) (t 25626 16726 70123 58000)) nil (25626 16740 583162 853000) 0 nil])
([nil nil ((3602 . 3608)) nil (25626 16740 583160 128000) 0 nil])
([nil nil ((3605 . 3613) (#("ins" 0 3 (fontified t)) . -3605) (undo-tree-id40 . -3) 3608) nil (25626 16740 583155 980000) 0 nil])
([nil nil ((3620 . 3621) (#(")" 0 1 (face elixir-attribute-face fontified nil)) . -3620) (3613 . 3621)) nil (25626 16740 583133 569000) 0 nil])
([nil nil ((#(" |> tap(&IO.inspect(&1))" 0 1 (fontified t) 1 8 (fontified t) 8 11 (face font-lock-type-face fontified t) 11 24 (fontified t)) . 2117) (t 25626 16740 589906 831000)) nil (25626 16759 439694 215000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2117) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (25626 16759 439690 678000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2117) (#(" " 0 1 (fontified t)) . 2117) (#(" " 0 1 (fontified t)) . 2117) (#(" " 0 1 (fontified t)) . 2117)) nil (25626 16759 439670 832000) 0 nil])
([nil nil ((#("# IO.inspect(socket)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t)) . 2021)) nil (25626 16759 439662 356000) 0 nil])
([nil nil ((3576 . 3592) (3575 . 3577) (#("\"" 0 1 (syntax-table (15) fontified nil)) . -3575) (3571 . 3576) (t 25626 16759 481655 884000)) nil (25626 16781 922307 324000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -3572) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(">" 0 1 (fontified t)) . -3573) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t)) . -3574) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -3575) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3576) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3577) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3578) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -3579) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -3580) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3581) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -3582) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3583) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -3584) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3585) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -3586) (undo-tree-id179 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -3587) (undo-tree-id180 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -3588) (undo-tree-id181 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -3589) (undo-tree-id182 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3590) (undo-tree-id183 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -3591) (undo-tree-id184 . -1) (#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -3592) (undo-tree-id185 . -1) 3593 (t 25626 16781 961400 457000)) nil (25626 16797 433377 64000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3571) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 3572) nil (25626 16797 433109 607000) 0 nil])
([nil nil ((6134 . 6135) (t 25626 16797 445250 841000)) nil (25626 17417 537871 291000) 0 nil])
([nil nil ((1842 . 1843) (t 25626 17417 579206 36000)) nil (25626 17471 572968 927000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1842) (undo-tree-id186 . -1) 1843 (t 25626 17471 572433 685000)) nil (25626 17521 754400 13000) 0 nil])
([nil nil ((#("IO.inspect(@socket)" 0 2 (face font-lock-type-face fontified t) 2 3 (fontified t) 3 11 (fontified t) 11 18 (face elixir-attribute-face fontified t) 18 19 (fontified t)) . 3553) (undo-tree-id187 . -19) (undo-tree-id188 . -18) (t 25626 17521 765635 621000)) nil (25626 17580 990607 967000) 0 nil])
([nil nil ((apply -12 3554 3812 undo--wrap-and-run-primitive-undo 3554 3812 ((3760 . 3762) (3744 . 3746) (3719 . 3721) (3629 . 3631) (3574 . 3576) (3558 . 3560)))) nil (25626 17580 990589 61000) 0 nil])
([nil nil ((#("n" 0 1 (face elixir-atom-face fontified t)) . -2717) (undo-tree-id189 . -1) (#("o" 0 1 (face elixir-atom-face fontified t)) . -2718) (undo-tree-id190 . -1) (#("r" 0 1 (face elixir-atom-face fontified t)) . -2719) (undo-tree-id191 . -1) (#("e" 0 1 (face elixir-atom-face fontified t)) . -2720) (undo-tree-id192 . -1) (#("p" 0 1 (face elixir-atom-face fontified t)) . -2721) (undo-tree-id193 . -1) (#("l" 0 1 (face elixir-atom-face fontified t)) . -2722) (undo-tree-id194 . -1) (#("y" 0 1 (face elixir-atom-face fontified t)) . -2723) (undo-tree-id195 . -1) 2724 (t 25626 17581 7121 872000)) nil (25628 36081 299383 267000) 0 nil])
([nil nil ((2717 . 2722)) nil (25628 36081 299367 683000) 0 nil])
([nil nil ((2797 . 2801)) nil (25628 36081 299366 461000) 0 nil])
([nil nil ((2801 . 2805)) nil (25628 36081 299362 786000) 0 nil])
([nil nil ((2806 . 2811) (t 25628 36081 313065 410000)) nil (25628 36735 472376 787000) 0 nil])
([nil nil ((2818 . 2829) (2811 . 2819)) nil (25628 36735 472374 13000) 0 nil])
([nil nil ((2830 . 2832) (2829 . 2831)) nil (25628 36735 472370 868000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -2835) (2835 . 2836) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -2835) (2835 . 2836) (2834 . 2836) (#("\"" 0 1 (syntax-table (15) fontified nil)) . -2834) (2832 . 2835)) nil (25628 36735 472366 131000) 0 nil])
([nil nil ((2835 . 2841)) nil (25628 36735 472361 764000) 0 nil])
([nil nil ((2841 . 2851)) nil (25628 36735 472359 841000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -2850) (undo-tree-id199 . -1) 2851) nil (25628 36735 472357 417000) 0 nil])
([nil nil ((2850 . 2853)) nil (25628 36735 472352 780000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . -2852) (undo-tree-id198 . -1) 2853) nil (25628 36735 472350 116000) 0 nil])
([nil nil ((2852 . 2853)) nil (25628 36735 472345 940000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -2851) (undo-tree-id196 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -2852) (undo-tree-id197 . -1) 2853) nil (25628 36735 472341 763000) 0 nil])
([nil nil ((2851 . 2857)) nil (25628 36735 472322 183000) 0 nil])
([nil nil ((2857 . 2859)) nil (25628 36735 472314 652000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -2839) (undo-tree-id207 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2840) (undo-tree-id208 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2841) (undo-tree-id209 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2842) (undo-tree-id210 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2843) (undo-tree-id211 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2844) (undo-tree-id212 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -2845) (undo-tree-id213 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2846) (undo-tree-id214 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2847) (undo-tree-id215 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2848) (undo-tree-id216 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2849) (undo-tree-id217 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -2850) (undo-tree-id218 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -2851) (undo-tree-id219 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2852) (undo-tree-id220 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2853) (undo-tree-id221 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2854) (undo-tree-id222 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2855) (undo-tree-id223 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2856) (undo-tree-id224 . -1) (#("!" 0 1 (face font-lock-string-face fontified t)) . -2857) (undo-tree-id225 . -1) (#("!" 0 1 (face font-lock-string-face fontified t)) . -2858) (undo-tree-id226 . -1) (#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -2859) (undo-tree-id227 . -1) 2860 (t 25628 36735 484192 93000)) nil (25628 36803 110475 747000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2832) (undo-tree-id200 . -1) (#(" " 0 1 (fontified t)) . -2833) (undo-tree-id201 . -1) (#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -2834) (undo-tree-id202 . -1) (#("L" 0 1 (face font-lock-string-face fontified t)) . -2835) (undo-tree-id203 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2836) (undo-tree-id204 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2837) (undo-tree-id205 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2838) (undo-tree-id206 . -1) 2839) nil (25628 36803 110421 754000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2715) (undo-tree-id249 . -1) (#(":" 0 1 (face elixir-atom-face fontified t)) . -2716) (undo-tree-id250 . -1) (#("r" 0 1 (face elixir-atom-face fontified t)) . -2717) (undo-tree-id251 . -1) (#("e" 0 1 (face elixir-atom-face fontified t)) . -2718) (undo-tree-id252 . -1) (#("p" 0 1 (face elixir-atom-face fontified t)) . -2719) (undo-tree-id253 . -1) (#("l" 0 1 (face elixir-atom-face fontified t)) . -2720) (undo-tree-id254 . -1) (#("y" 0 1 (face elixir-atom-face fontified t)) . -2721) (undo-tree-id255 . -1) (#("," 0 1 (fontified t)) . -2722) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t)) . -2723) (undo-tree-id257 . -1) 2724 (t 25628 36803 113771 278000)) nil (25628 37737 4566 454000) 0 nil])
([nil nil ((2715 . 2735)) nil (25628 37737 4548 195000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -2729) (undo-tree-id248 . -1) 2730) nil (25628 37737 4546 924000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2807) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -2808) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("s" 0 1 (fontified t)) . -2809) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("o" 0 1 (fontified t)) . -2810) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("c" 0 1 (fontified t)) . -2811) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("k" 0 1 (fontified t)) . -2812) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("e" 0 1 (fontified t)) . -2813) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("t" 0 1 (fontified t)) . -2814) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("}" 0 1 (fontified t)) . -2815) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . -1) 2816) nil (25628 37737 4540 564000) 0 nil])
([nil nil ((3557 . 3582) (#("  def render(assigns ) do
    
" 2 5 (face font-lock-keyword-face) 6 9 (face font-lock-function-name-face) 9 12 (face font-lock-function-name-face) 23 25 (face font-lock-keyword-face)) . -3557) (undo-tree-id258 . -30) (undo-tree-id259 . -31) (undo-tree-id260 . -31) (undo-tree-id261 . -2) (undo-tree-id262 . -25) (2696 . 2835) (#("    socket = socket |> assign(socket, page_number: params[\"page_number\"] |> String.to_integer())
    |> tap(&IO.inspect(&1))
" 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 23 (fontified t) 23 29 (fontified t) 29 38 (fontified t) 38 50 (face elixir-atom-face fontified t) 50 58 (fontified t) 58 59 (face font-lock-string-face syntax-table (15) fontified t) 59 70 (face font-lock-string-face fontified t) 70 71 (face font-lock-string-face syntax-table (15) fontified t) 71 76 (fontified t) 76 82 (face font-lock-type-face fontified t) 82 96 (fontified t) 96 97 (fontified t) 97 107 (fontified t) 107 108 (fontified t) 108 111 (face font-lock-type-face fontified t) 111 119 (fontified t) 119 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t)) . -2696) (undo-tree-id263 . -97) (undo-tree-id264 . -125) (undo-tree-id265 . -125) (undo-tree-id266 . -97) (undo-tree-id267 . -97) (undo-tree-id268 . -96) (undo-tree-id269 . -96) (undo-tree-id270 . -96) (undo-tree-id271 . -4) (undo-tree-id272 . -96) (undo-tree-id273 . -96) (undo-tree-id274 . -96) (undo-tree-id275 . -96) (1944 . 2102) (#("  def get_total_results(tr,socket) do
    total_res =
      tr[\"total\"]
   
     socket =
       socket
       |> assign(results_qty: total_res)
       {:noreply, socket}
" 0 2 (fontified t) 2 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 23 (face font-lock-function-name-face fontified t) 23 35 (fontified t) 35 37 (face font-lock-keyword-face fontified t) 37 42 (fontified t) 42 51 (face font-lock-variable-name-face fontified t) 51 63 (fontified t) 63 64 (face font-lock-string-face fontified t syntax-table (15)) 64 69 (face font-lock-string-face fontified t) 69 70 (face font-lock-string-face fontified t syntax-table (15)) 70 72 (fontified t) 72 75 (fontified t) 75 76 (fontified t) 76 81 (fontified t) 81 87 (face font-lock-variable-name-face fontified t) 87 90 (fontified t) 90 94 (fontified t) 94 95 (fontified t) 95 97 (fontified t) 97 104 (fontified t) 104 108 (fontified t) 108 109 (fontified t) 109 111 (fontified t) 111 121 (fontified t) 121 133 (face elixir-atom-face fontified t) 133 145 (fontified t) 145 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 161 (face elixir-atom-face fontified t) 161 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t)) . -1944) (undo-tree-id276 . -58) (undo-tree-id277 . -145) (undo-tree-id278 . -58) (undo-tree-id279 . -2) (undo-tree-id280 . -37) (1841 . 1884) (#("    |> tap(&get_total_results(&1, socket ))
" 0 4 (fontified t) 4 44 (fontified t)) . -1841) (#("
" 0 1 (fontified t)) . -1516) (undo-tree-id281 . -1) (t 25628 37737 16160 392000)) nil (25628 37741 996042 234000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -1051) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("i" 0 1 (face elixir-attribute-face fontified t)) . -1052) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("m" 0 1 (face elixir-attribute-face fontified t)) . -1053) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("p" 0 1 (face elixir-attribute-face fontified t)) . -1054) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("l" 0 1 (face elixir-attribute-face fontified t)) . -1055) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#(" " 0 1 (fontified t)) . -1056) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("t" 0 1 (fontified t)) . -1057) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#("r" 0 1 (fontified t)) . -1058) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("u" 0 1 (fontified t)) . -1059) (undo-tree-id326 . -1) (#("e" 0 1 (face elixir-atom-face fontified t)) . -1060) (undo-tree-id327 . -1) 1061 (t 25628 37742 6505 974000)) nil (25628 37804 354382 347000) 0 nil])
([nil nil ((#("@impl true" 0 5 (face elixir-attribute-face fontified t) 5 6 (fontified t) 6 10 (face elixir-atom-face fontified t)) . 797) (undo-tree-id328 . -10) (t 25628 37804 369831 46000)) nil (25628 37807 701142 906000) 0 nil])
([nil nil ((2816 . 2820) (#("    " 0 4 (fontified t)) . 2815) (undo-tree-id329 . -4) (2814 . 2820) (t 25628 37807 700726 774000)) nil (25628 37857 904280 905000) 0 nil])
([nil nil ((2821 . 2837) (2820 . 2822)) nil (25628 37857 904268 386000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -291) (undo-tree-id330 . -1) 292 (t 25628 37857 912080 515000)) nil (25628 37944 743629 947000) 0 nil])
([nil nil ((291 . 292)) nil (25628 37944 743615 915000) 0 nil])
([nil nil ((291 . 292)) nil (25628 37944 743609 806000) 0 nil])
([nil nil ((#("@impl true" 0 5 (face elixir-attribute-face fontified t) 5 6 (fontified t) 6 10 (face elixir-atom-face fontified t)) . 1914) (t 25628 37944 759288 595000)) nil (25628 38181 506007 248000) 0 nil])
([nil nil ((2053 . 2054)) nil (25628 38181 506002 10000) 0 nil])
([nil nil ((2048 . 2053) (t 25628 38181 516797 840000)) nil (25628 38660 594336 330000) 0 nil])
([nil nil ((2053 . 2066)) nil (25628 38660 594335 499000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -2055) (undo-tree-id334 . -1) (#(">" 0 1 (fontified t)) . -2056) (undo-tree-id335 . -1) (#(" " 0 1 (fontified t)) . -2057) (undo-tree-id336 . -1) (#("a" 0 1 (fontified t)) . -2058) (undo-tree-id337 . -1) (#("s" 0 1 (fontified t)) . -2059) (undo-tree-id338 . -1) (#("s" 0 1 (fontified t)) . -2060) (undo-tree-id339 . -1) (#("i" 0 1 (fontified t)) . -2061) (undo-tree-id340 . -1) (#("g" 0 1 (fontified t)) . -2062) (undo-tree-id341 . -1) (#("n" 0 1 (fontified t)) . -2063) (undo-tree-id342 . -1) (#("(" 0 1 (fontified t)) . -2064) (undo-tree-id343 . -1) (#(")" 0 1 (fontified t)) . -2065) (undo-tree-id344 . -1) (undo-tree-id345 . 1) (undo-tree-id346 . -1) 2066) nil (25628 38660 594331 402000) 0 nil])
([nil nil ((2050 . 2054) (#("    " 0 4 (fontified nil)) . 2049) (undo-tree-id332 . -4) (#("  " 0 2 (fontified t)) . -2053) (undo-tree-id333 . -2) (2055 . 2056)) nil (25628 38660 594320 265000) 0 nil])
([nil nil ((2054 . 2063)) nil (25628 38660 594317 70000) 0 nil])
([nil nil ((2056 . 2068) (#("get_res" 0 7 (fontified t)) . -2056) (undo-tree-id331 . -7) 2063) nil (25628 38660 594315 488000) 0 nil])
([nil nil ((2068 . 2082)) nil (25628 38660 594303 269000) 0 nil])
([nil nil ((2090 . 2091) (#(")" 0 1 (fontified nil)) . -2090) (2082 . 2091)) nil (25628 38660 594297 761000) 0 nil])
([nil nil ((2068 . 2075) (t 25628 38660 605968 369000)) nil (25628 38672 429261 607000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2068) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("o" 0 1 (fontified t)) . -2069) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("c" 0 1 (fontified t)) . -2070) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (#("k" 0 1 (fontified t)) . -2071) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("e" 0 1 (fontified t)) . -2072) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("t" 0 1 (fontified t)) . -2073) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("." 0 1 (fontified t)) . -2074) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#("a" 0 1 (fontified t)) . -2075) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("s" 0 1 (fontified t)) . -2076) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("s" 0 1 (fontified t)) . -2077) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("i" 0 1 (fontified t)) . -2078) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("g" 0 1 (fontified t)) . -2079) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("n" 0 1 (fontified t)) . -2080) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("s" 0 1 (fontified t)) . -2081) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("." 0 1 (fontified t)) . -2082) (undo-tree-id466 . -1) 2083 (t 25628 38672 434047 79000)) nil (25628 38691 457065 81000) 0 nil])
([nil nil ((2068 . 2083) (t 25628 38691 463738 283000)) nil (25628 38744 99459 41000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -2087) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("s" 0 1 (fontified t)) . -2088) (undo-tree-id489 . -1) 2089 (t 25628 38744 110284 699000)) nil (25628 38749 770241 926000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2082) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("p" 0 1 (fontified t)) . -2083) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("a" 0 1 (fontified t)) . -2084) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#("r" 0 1 (fontified t)) . -2085) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (#("a" 0 1 (fontified t)) . -2086) (undo-tree-id485 . -1) (undo-tree-id486 . -1) 2087) nil (25628 38749 770233 964000) 0 nil])
([nil nil ((2090 . 2094) (#("  " 0 2 (fontified t)) . -2054) (2091 . 2092) (t 25628 38749 772407 570000)) nil (25628 38768 451345 756000) 0 nil])
([nil nil ((2094 . 2102)) nil (25628 38768 451342 240000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -2099) (undo-tree-id490 . -1) (#("i" 0 1 (fontified t)) . -2100) (undo-tree-id491 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -2101) (undo-tree-id492 . -1) 2102) nil (25628 38768 451336 862000) 0 nil])
([nil nil ((2099 . 2109)) nil (25628 38768 451310 341000) 0 nil])
([nil nil ((#("
    get_results(socket.assigns, socket)
    |> IO.inspect()
" 0 1 (fontified t) 1 5 (fontified t) 5 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 48 (fontified t) 48 50 (face font-lock-type-face fontified t) 50 58 (fontified t) 58 60 (fontified t) 60 61 (fontified t)) . -2049) (undo-tree-id516 . -61) (undo-tree-id517 . -61) (undo-tree-id518 . -41) (undo-tree-id519 . -41) (undo-tree-id520 . -61) (undo-tree-id521 . -61) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -61) 2110 (t 25628 38768 458212 781000)) nil (25628 38795 790597 480000) 0 nil])
([nil nil ((#("
    socket =
      socket
      |> assign(results_qty: total_res)

   # {:noreply, socket}
" 0 5 (fontified t) 5 11 (face font-lock-variable-name-face fontified t) 11 27 (fontified t) 27 43 (fontified t) 43 55 (face elixir-atom-face fontified t) 55 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 71 (fontified t) 71 73 (face font-lock-comment-delimiter-face fontified t) 73 74 (face font-lock-comment-face fontified t) 74 82 (face font-lock-comment-face fontified t) 82 92 (face font-lock-comment-face fontified t)) . -1982) (undo-tree-id499 . -92) (undo-tree-id500 . -92) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -14) (undo-tree-id504 . -14) (undo-tree-id505 . -67) (undo-tree-id506 . -67) (undo-tree-id507 . -27) (undo-tree-id508 . -27) (undo-tree-id509 . -92) (undo-tree-id510 . -92) (undo-tree-id511 . -68) (undo-tree-id512 . -68) (undo-tree-id513 . -67) (undo-tree-id514 . -92) (undo-tree-id515 . -92) 2074) nil (25628 38795 790582 6000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1987) (undo-tree-id498 . -1) 1988) nil (25628 38795 790556 547000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1987) (undo-tree-id496 . -1) (undo-tree-id497 . 1) 1988) nil (25628 38795 790551 730000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2047) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2048) (undo-tree-id495 . -1) 2049) nil (25628 38795 790541 855000) 0 nil])
([nil nil ((1989 . 1991) (t 25628 38795 805146 621000)) nil (25628 38909 220522 690000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2036) (undo-tree-id525 . -1) (#(" " 0 1 (fontified t)) . -2037) (undo-tree-id526 . -1) (#("s" 0 1 (fontified t)) . -2038) (undo-tree-id527 . -1) (#("o" 0 1 (fontified t)) . -2039) (undo-tree-id528 . -1) (#("c" 0 1 (fontified t)) . -2040) (undo-tree-id529 . -1) (#("k" 0 1 (fontified t)) . -2041) (undo-tree-id530 . -1) (#("e" 0 1 (fontified t)) . -2042) (undo-tree-id531 . -1) (#("t" 0 1 (fontified t)) . -2043) (undo-tree-id532 . -1) 2044) nil (25628 38909 220511 563000) 0 nil])
([nil nil ((3754 . 3756) (t 25628 38909 235541 742000)) nil (25629 44084 322403 195000) 0 nil])
([nil nil ((3755 . 3758)) nil (25629 44084 322402 143000) 0 nil])
([nil nil ((3759 . 3763)) nil (25629 44084 322401 262000) 0 nil])
([nil nil ((3758 . 3760)) nil (25629 44084 322400 351000) 0 nil])
([nil nil ((3760 . 3761)) nil (25629 44084 322399 539000) 0 nil])
([nil nil ((3761 . 3768)) nil (25629 44084 322398 588000) 0 nil])
([nil nil ((3767 . 3769)) nil (25629 44084 322397 737000) 0 nil])
([nil nil ((3770 . 3771)) nil (25629 44084 322396 945000) 0 nil])
([nil nil ((3771 . 3776)) nil (25629 44084 322396 134000) 0 nil])
([nil nil ((3776 . 3778)) nil (25629 44084 322395 393000) 0 nil])
([nil nil ((3777 . 3779)) nil (25629 44084 322394 532000) 0 nil])
([nil nil ((3777 . 3792) (#("br" 0 2 (fontified t face font-lock-string-face)) . -3777) (undo-tree-id57 . -2) 3779) nil (25629 44084 322393 610000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -3778) (undo-tree-id42 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3779) (undo-tree-id43 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3780) (undo-tree-id44 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -3781) (undo-tree-id45 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3782) (undo-tree-id46 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3783) (undo-tree-id47 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3784) (undo-tree-id48 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3785) (undo-tree-id49 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -3786) (undo-tree-id50 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3787) (undo-tree-id51 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3788) (undo-tree-id52 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -3789) (undo-tree-id53 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3790) (undo-tree-id54 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -3791) (undo-tree-id55 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -3792) (undo-tree-id56 . -1) 3793) nil (25629 44084 322389 13000) 0 nil])
([nil nil ((3778 . 3780)) nil (25629 44084 322376 123000) 0 nil])
([nil nil ((3770 . 3771)) nil (25629 44084 322375 452000) 0 nil])
([nil nil ((3771 . 3776)) nil (25629 44084 322374 831000) 0 nil])
([nil nil ((3776 . 3778)) nil (25629 44084 322373 940000) 0 nil])
([nil nil ((3777 . 3780)) nil (25629 44084 322373 319000) 0 nil])
([nil nil ((3781 . 3782)) nil (25629 44084 322372 698000) 0 nil])
([nil nil ((3782 . 3789)) nil (25629 44084 322372 47000) 0 nil])
([nil nil ((3788 . 3791)) nil (25629 44084 322371 336000) 0 nil])
([nil nil ((3781 . 3782)) nil (25629 44084 322370 695000) 0 nil])
([nil nil ((3782 . 3787)) nil (25629 44084 322370 34000) 0 nil])
([nil nil ((3787 . 3808)) nil (25629 44084 322369 403000) 0 nil])
([nil nil ((3808 . 3809)) nil (25629 44084 322368 762000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -3801) (undo-tree-id34 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3802) (undo-tree-id35 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3803) (undo-tree-id36 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3804) (undo-tree-id37 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3805) (undo-tree-id38 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3806) (undo-tree-id39 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3807) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3808) (undo-tree-id41 . -1) 3809) nil (25629 44084 322366 599000) 0 nil])
([nil nil ((3801 . 3816)) nil (25629 44084 322360 339000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -3818) (3818 . 3819) (#("}" 0 1 (fontified nil face font-lock-string-face)) . -3818) (3818 . 3819) (3816 . 3819)) nil (25629 44084 322359 348000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face font-lock-string-face)) . -3817) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -1) (#("}" 0 1 (fontified t face font-lock-string-face)) . -3818) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -1) 3819) nil (25629 44084 322357 385000) 0 nil])
([nil nil ((3817 . 3824)) nil (25629 44084 322350 374000) 0 nil])
([nil nil ((3824 . 3828)) nil (25629 44084 322349 643000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3794) (undo-tree-id9 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3795) (undo-tree-id10 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3796) (undo-tree-id11 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3797) (undo-tree-id12 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3798) (undo-tree-id13 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3799) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3800) (undo-tree-id15 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3801) (undo-tree-id16 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3802) (undo-tree-id17 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -3803) (undo-tree-id18 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3804) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3805) (undo-tree-id20 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3806) (undo-tree-id21 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3807) (undo-tree-id22 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -3808) (undo-tree-id23 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -3809) (undo-tree-id24 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3810) (undo-tree-id25 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3811) (undo-tree-id26 . -1) 3812) nil (25629 44084 322344 875000) 0 nil])
([nil nil ((3794 . 3799)) nil (25629 44084 322330 53000) 0 nil])
([nil nil ((3799 . 3802)) nil (25629 44084 322329 151000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-string-face)) . -3801) (undo-tree-id8 . -1) 3802) nil (25629 44084 322327 949000) 0 nil])
([nil nil ((3801 . 3817)) nil (25629 44084 322325 946000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 3817) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (#("s" 0 1 (fontified t face font-lock-string-face)) . 3817) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (#("i" 0 1 (fontified t face font-lock-string-face)) . 3817) (undo-tree-id7 . 1) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3817)) nil (25629 44084 322321 670000) 0 nil])
([nil nil ((3780 . 3787) (t 25629 44084 321855 800000)) nil (25629 44100 280620 589000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3786) (undo-tree-id60 . -1) 3787) nil (25629 44100 280617 204000) 0 nil])
([nil nil ((3786 . 3787)) nil (25629 44100 280612 406000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . -3786) (undo-tree-id59 . -1) 3787) nil (25629 44100 280609 312000) 0 nil])
([nil nil ((3788 . 3789) (3787 . 3789) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -3787) (3786 . 3788)) nil (25629 44100 280603 312000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3788) (undo-tree-id58 . -1) 3789) nil (25629 44100 280596 642000) 0 nil])
([nil nil ((3788 . 3802)) nil (25629 44119 122621 568000) 0 nil])
([nil nil ((3859 . 3860) (t 25629 44100 284563 783000)) nil (25629 44124 509647 94000) 0 nil] [nil nil ((#("     <div class=\"resultsDisplay\">" 0 16 (fontified t face font-lock-string-face) 16 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face)) . 3771) (undo-tree-id61 . -5) (undo-tree-id62 . -6) (undo-tree-id63 . -33) (t 25629 44100 284563 783000)) ((3771 . 3804)) (25629 44118 836050 985000) 0 nil])
([nil nil ((#("<br>
     <div class=\"resultsDisplay\">
     Hi the number of resultas are @results_qty
     </div>
     <br>
    " 0 5 (fontified t face font-lock-string-face) 5 21 (fontified t face font-lock-string-face) 21 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 99 (fontified t face font-lock-string-face) 99 105 (fontified t face font-lock-string-face) 105 108 (fontified t face font-lock-string-face) 108 109 (fontified t face font-lock-string-face) 109 113 (fontified t face font-lock-string-face)) . 3766) (undo-tree-id68 . -5) (undo-tree-id69 . -39) (undo-tree-id70 . -39) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -113) (undo-tree-id75 . -87) (undo-tree-id76 . -87) (undo-tree-id77 . -99) (undo-tree-id78 . -99) (undo-tree-id79 . -109) (undo-tree-id80 . -109) (undo-tree-id81 . -109) (undo-tree-id82 . -113) (undo-tree-id83 . -109) (undo-tree-id84 . -113) 3879 (t 25629 44124 516530 308000)) nil (25629 44141 65439 535000) 0 nil])
([nil nil ((3771 . 3776)) ((#("     " 0 5 (fontified t face font-lock-string-face)) . 3771) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5)) (25629 44118 371388 700000) 0 nil])
([nil nil ((3867 . 3868)) nil (25629 44141 65416 430000) 0 nil])
nil
([nil nil ((3867 . 3868)) nil (25629 44141 65415 579000) 0 nil])
([nil nil ((3868 . 3872)) nil (25629 44141 65414 367000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3984 . 3985) (nil fontified nil 3981 . 3985) (nil fontified nil 3980 . 3981) (nil fontified nil 3977 . 3980) (nil fontified nil 3971 . 3977) (nil fontified nil 3959 . 3971) (nil fontified nil 3958 . 3959) (nil fontified nil 3911 . 3958) (nil fontified nil 3910 . 3911) (nil fontified nil 3909 . 3910) (nil fontified nil 3893 . 3909) (nil fontified nil 3877 . 3893) (nil fontified nil 3872 . 3877) (3872 . 3985)) nil (25629 44141 65410 220000) 0 nil])
([nil nil ((3946 . 3948) (t 25629 44141 79039 443000)) nil (25629 44169 902304 407000) 0 nil])
([nil nil ((#("@results_qty" 0 12 (fontified t face font-lock-string-face)) . 3948) (undo-tree-id85 . -12) (undo-tree-id86 . -12) 3960) nil (25629 44169 902301 322000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3958 . 3959) (nil fontified nil 3947 . 3959) (3947 . 3959)) nil (25629 44169 902285 328000) 0 nil])
([nil nil ((3946 . 3948)) nil (25629 44169 902283 144000) 0 nil])
([nil nil ((3947 . 3948)) nil (25629 44169 902281 792000) 0 nil])
([nil nil ((3948 . 3949)) nil (25629 44169 902280 520000) 0 nil])
([nil nil ((3949 . 3950)) nil (25629 44169 902278 437000) 0 nil])
([nil nil ((3965 . 3968)) nil (25629 44169 902276 43000) 0 nil])
([nil nil ((3967 . 3968)) nil (25629 44169 902270 224000) 0 nil])
([nil nil ((3951 . 3952) (t 25629 44169 949468 208000)) nil (25629 44178 113531 459000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3949) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 3950 (t 25629 44178 122758 567000)) nil (25629 44180 578083 987000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face font-lock-string-face)) . -3949) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 3950 (t 25629 44180 585941 963000)) nil (25629 44188 589531 589000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face font-lock-string-face)) . -3965) (undo-tree-id89 . -1) 3966) nil (25629 44188 589522 145000) 0 nil])
([nil nil ((3965 . 3966)) nil (25629 44188 589504 307000) 0 nil])
([nil nil ((3964 . 3972) (t 25629 44188 607282 698000)) nil (25629 44212 880395 80000) 0 nil])
([nil nil ((3968 . 3977) (#("to_s" 0 4 (fontified t face font-lock-string-face)) . -3968) (undo-tree-id92 . -4) 3972) nil (25629 44212 880390 883000) 0 nil])
([nil nil ((3977 . 3979)) nil (25629 44212 880373 707000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face font-lock-string-face)) . -3950) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 3951 (t 25629 44212 887233 316000)) nil (25629 44223 259236 860000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face font-lock-string-face)) . -3962) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . 1) (undo-tree-id96 . -1) 3963) nil (25629 44223 259230 380000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -3951) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3952) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3953) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3954) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3955) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3956) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3957) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -3958) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("q" 0 1 (fontified t face font-lock-string-face)) . -3959) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3960) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("y" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -3961) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 3962 (t 25629 44223 271790 588000)) nil (25629 44249 566515 905000) 0 nil])
([nil nil ((3951 . 3962)) nil (25629 44249 566348 327000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -3960) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3961) (undo-tree-id101 . -1) 3962) nil (25629 44249 566343 400000) 0 nil])
([nil nil ((3960 . 3962)) nil (25629 44249 566318 81000) 0 nil])
([nil nil ((#("|> tap(&IO.inspect(&1))" 0 7 (fontified t) 7 10 (fontified t face font-lock-type-face) 10 23 (fontified t)) . 2681) (undo-tree-id179 . -23) (t 25629 44249 575070 423000)) nil (25629 44279 484243 759000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face elixir-atom-face)) . -2689) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -2690) (undo-tree-id182 . -1) 2691 (t 25629 44279 525141 262000)) nil (25629 44290 412933 600000) 0 nil])
([nil nil ((2689 . 2691) (t 25629 44290 429526 199000)) nil (25629 44318 483431 670000) 0 nil])
([nil nil ((2682 . 2686)) nil (25629 44318 483429 887000) 0 nil])
([nil nil ((2678 . 2680) (#("    " 0 4 (fontified t)) . 2675) (undo-tree-id187 . -4) (2679 . 2680)) nil (25629 44318 483428 34000) 0 nil])
([nil nil ((2680 . 2689)) nil (25629 44318 483424 308000) 0 nil])
([nil nil ((2689 . 2696)) nil (25629 44318 483422 736000) 0 nil])
([nil nil ((2693 . 2701) (#("ins" 0 3 (fontified t)) . -2693) (undo-tree-id183 . -3) (undo-tree-id184 . -1) (undo-tree-id185 . -2) (undo-tree-id186 . -3) 2696) nil (25629 44318 483419 331000) 0 nil])
([nil nil ((2701 . 2702) (#(")" 0 1 (fontified nil)) . -2701) (2701 . 2702)) nil (25629 44318 483395 705000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("t" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("l" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("u" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("s" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("r" 0 1 (fontified t face font-lock-string-face)) . 3921) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3921) (#("f" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("o" 0 1 (fontified t face font-lock-string-face)) . 3921) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3921) (#("r" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("b" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("m" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("u" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("n" 0 1 (fontified t face font-lock-string-face)) . 3921) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3921) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("h" 0 1 (fontified t face font-lock-string-face)) . 3921) (#("t" 0 1 (fontified t face font-lock-string-face)) . 3921) (t 25629 44318 504218 770000)) nil (25629 44403 999186 827000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . 3921)) nil (25629 44403 999176 761000) 0 nil])
([nil nil ((3921 . 3942)) nil (25629 44403 999175 509000) 0 nil])
([nil nil ((3942 . 3944)) nil (25629 44403 999174 157000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -3925) (undo-tree-id191 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3926) (undo-tree-id192 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -3927) (undo-tree-id193 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -3928) (undo-tree-id194 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3929) (undo-tree-id195 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3930) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3931) (undo-tree-id197 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3932) (undo-tree-id198 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -3933) (undo-tree-id199 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3934) (undo-tree-id200 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3935) (undo-tree-id201 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3936) (undo-tree-id202 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -3937) (undo-tree-id203 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3938) (undo-tree-id204 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3939) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3940) (undo-tree-id206 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3941) (undo-tree-id207 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3942) (undo-tree-id208 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3943) (undo-tree-id209 . -1) 3944) nil (25629 44403 999166 506000) 0 nil])
([nil nil ((3925 . 3931)) nil (25629 44403 999134 747000) 0 nil])
([nil nil ((3931 . 3942)) nil (25629 44403 999132 503000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . 3943) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (#("r" 0 1 (fontified t face font-lock-string-face)) . 3943) (undo-tree-id190 . 1) (#("a" 0 1 (fontified t face font-lock-string-face)) . 3943)) nil (25629 44403 999126 244000) 0 nil])
([nil nil ((#(" socket =
      socket" 0 1 (fontified t) 1 7 (fontified t face font-lock-variable-name-face) 7 22 (fontified t)) . -2569) (undo-tree-id244 . -22) (undo-tree-id245 . -10) (undo-tree-id246 . -22) 2591 (t 25629 44404 19868 295000)) nil (25629 44460 938157 245000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -2576) (undo-tree-id241 . -1) (#(">" 0 1 (fontified t)) . -2577) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -2578) (undo-tree-id243 . -1) 2579) nil (25629 44460 938153 780000) 0 nil])
([nil nil ((2577 . 2583) (2576 . 2578)) nil (25629 44460 938149 914000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face elixir-atom-face)) . -2580) (undo-tree-id238 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -2581) (undo-tree-id239 . -1) (#("y" 0 1 (fontified t face elixir-atom-face)) . -2582) (undo-tree-id240 . -1) 2583) nil (25629 44460 938148 772000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face elixir-atom-face)) . -2578) (undo-tree-id236 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -2579) (undo-tree-id237 . -1) 2580) nil (25629 44460 938144 475000) 0 nil])
([nil nil ((2578 . 2586)) nil (25629 44460 938142 212000) 0 nil])
([nil nil ((#("assign(socket, page_number: params[\"page_number\"] |> String.to_integer())" 0 15 (fontified t) 15 27 (fontified t face elixir-atom-face) 27 35 (fontified t) 35 36 (fontified t syntax-table (15) face font-lock-string-face) 36 47 (fontified t face font-lock-string-face) 47 48 (fontified t syntax-table (15) face font-lock-string-face) 48 53 (fontified t) 53 59 (fontified t face font-lock-type-face) 59 73 (fontified t)) . 2587) (undo-tree-id230 . -73) (undo-tree-id231 . 1) (undo-tree-id232 . -73) (undo-tree-id233 . 67) (undo-tree-id234 . -7) (undo-tree-id235 . -73) 2660) nil (25629 44460 938141 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2658 . 2659) (nil fontified nil 2645 . 2659) (nil fontified nil 2639 . 2645) (nil fontified nil 2634 . 2639) (nil fontified nil 2633 . 2634) (nil fontified nil 2622 . 2633) (nil fontified nil 2621 . 2622) (nil fontified nil 2613 . 2621) (nil fontified nil 2601 . 2613) (nil fontified nil 2586 . 2601) (2586 . 2659)) nil (25629 44460 938136 814000) 0 nil])
([nil nil ((#("    socket |> IO.inspect()
    
    {:noreply, socket}" 0 14 (fontified t) 14 16 (fontified t face font-lock-type-face) 16 17 (fontified t) 17 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 31 (fontified t) 31 32 (fontified t) 32 37 (fontified t) 37 45 (fontified t face elixir-atom-face) 45 54 (fontified t)) . -2662) (undo-tree-id217 . -54) (undo-tree-id218 . -32) (undo-tree-id219 . -27) (undo-tree-id220 . -27) (undo-tree-id221 . -32) (undo-tree-id222 . -32) (undo-tree-id223 . -26) (undo-tree-id224 . -54) (undo-tree-id225 . -32) (undo-tree-id226 . 1) (undo-tree-id227 . -54) (undo-tree-id228 . 18) (undo-tree-id229 . -37) 2716) nil (25629 44460 938133 739000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2661) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1)) nil (25629 44460 938122 702000) 0 nil])
([nil nil ((3774 . 3905) (#("    <br>
     <div class=\"resultsDisplay\">
     Hi the selected page is   <%= @page_number |> to_string()  %>
     </div>
     <br>
    
" 0 4 (face font-lock-string-face) 4 9 (face font-lock-string-face) 9 25 (face font-lock-string-face) 25 41 (face font-lock-string-face) 41 42 (face font-lock-string-face) 42 43 (face font-lock-string-face) 43 78 (face font-lock-string-face) 78 90 (face font-lock-string-face) 90 94 (face font-lock-string-face) 94 103 (face font-lock-string-face) 103 105 (face font-lock-string-face) 105 109 (face font-lock-string-face) 109 110 (face font-lock-string-face) 110 122 (face font-lock-string-face) 122 128 (face font-lock-string-face) 128 131 (face font-lock-string-face) 131 132 (face font-lock-string-face) 132 135 (face font-lock-string-face) 135 136 (rear-nonsticky t face font-lock-string-face) 136 137 (face font-lock-string-face)) . -3774) (undo-tree-id254 . -4) (undo-tree-id255 . -79) (undo-tree-id256 . -78) (#("     
     
" 0 6 (face font-lock-string-face) 6 11 (face font-lock-string-face) 11 12 (face font-lock-string-face)) . -3673) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (2557 . 2647) (#("   
      {:noreply,assign(socket, page_number: params[\"page_number\"] |> String.to_integer())}

" 0 3 (fontified t) 3 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 19 (fontified t face elixir-atom-face) 19 20 (fontified t) 20 35 (fontified t) 35 47 (fontified t face elixir-atom-face) 47 55 (fontified t) 55 56 (fontified t syntax-table (15) face font-lock-string-face) 56 67 (fontified t face font-lock-string-face) 67 68 (fontified t syntax-table (15) face font-lock-string-face) 68 73 (fontified t) 73 79 (fontified t face font-lock-type-face) 79 92 (fontified t) 92 93 (fontified t rear-nonsticky t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t)) . -2557) (undo-tree-id259 . -95) (undo-tree-id260 . -95) (undo-tree-id261 . -96) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -95) (undo-tree-id265 . -95) (undo-tree-id266 . -96) (undo-tree-id267 . -96) (undo-tree-id268 . -95) (undo-tree-id269 . -3) (undo-tree-id270 . -94) (undo-tree-id271 . -20) (undo-tree-id272 . -95) (undo-tree-id273 . -95) (#("  
" 0 3 (fontified nil)) . -1906) (#("  
" 0 3 (fontified nil)) . -1037) (#("  
" 0 3 (fontified t)) . -796) (t 25629 44460 936998 911000)) nil (25629 44515 479087 706000) 0 nil])
([nil nil ((2645 . 2652)) nil (25629 44515 479050 349000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face elixir-atom-face)) . -2563) (undo-tree-id247 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -2564) (undo-tree-id248 . -1) (#("r" 0 1 (fontified t face elixir-atom-face)) . -2565) (undo-tree-id249 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -2566) (undo-tree-id250 . -1) (#("p" 0 1 (fontified t face elixir-atom-face)) . -2567) (undo-tree-id251 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -2568) (undo-tree-id252 . -1) (#("y" 0 1 (fontified t face elixir-atom-face)) . -2569) (undo-tree-id253 . -1) 2570) nil (25629 44515 479043 649000) 0 nil])
([nil nil ((2563 . 2568)) nil (25629 44515 479009 937000) 0 nil])
([nil nil ((2563 . 2565) (t 25629 44515 498910 336000)) nil (25629 44536 498613 867000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 2645) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (#("e" 0 1 (fontified t)) . 2645) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (#("k" 0 1 (fontified t)) . 2645) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (#("c" 0 1 (fontified t)) . 2645) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (#("o" 0 1 (fontified t)) . 2645) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (#("s" 0 1 (fontified t)) . 2645) (undo-tree-id294 . 1) (#("," 0 1 (fontified t)) . 2645)) nil (25629 44536 498602 570000) 0 nil])
([nil nil ((2556 . 2561) (t 25629 44536 507945 340000)) nil (25629 44796 616110 723000) 0 nil])
([nil nil ((2561 . 2578)) nil (25629 44796 616109 771000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2633 . 2634) (nil fontified nil 2621 . 2634) (nil fontified nil 2615 . 2621) (nil fontified nil 2610 . 2615) (nil fontified nil 2609 . 2610) (nil fontified nil 2598 . 2609) (nil fontified nil 2597 . 2598) (nil fontified nil 2589 . 2597) (nil fontified nil 2577 . 2589) (2577 . 2634)) nil (25629 44796 616108 680000) 0 nil])
([nil nil ((2637 . 2641) (#("    " 0 4 (fontified t)) . 2636) (undo-tree-id302 . -4) (2635 . 2641)) nil (25629 44796 616106 556000) 0 nil])
([nil nil ((2637 . 2641) (#("    " 0 4 (fontified nil)) . 2636) (2636 . 2640) (2636 . 2637)) nil (25629 44796 616104 273000) 0 nil])
([nil nil ((#("assign(socket, page_number: params[\"page_number\"] |> String.to_integer())" 0 15 (fontified t) 15 27 (fontified t face elixir-atom-face) 27 35 (fontified t) 35 36 (syntax-table (15) fontified t face font-lock-string-face) 36 47 (fontified t face font-lock-string-face) 47 48 (syntax-table (15) fontified t face font-lock-string-face) 48 53 (fontified t) 53 59 (fontified t face font-lock-type-face) 59 73 (fontified t)) . -2662) (undo-tree-id295 . -73) (undo-tree-id296 . -15) (undo-tree-id297 . -73) (undo-tree-id298 . 1) (undo-tree-id299 . -73) (undo-tree-id300 . 67) (undo-tree-id301 . -7) 2735) nil (25629 44797 970112 191000) 0 nil])
([nil nil ((2662 . 2668)) ((#("socket" 0 6 (fontified t)) . 2662)) (25629 44798 202392 751000) 0 nil])
([nil nil ((2636 . 2640)) nil (25629 44804 628981 32000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2640) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1) (undo-tree-id367 . 1) (undo-tree-id368 . -1)) nil (25629 44804 628979 890000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 2640) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . 5) (undo-tree-id356 . 5) (undo-tree-id357 . 5) (undo-tree-id358 . 5) (undo-tree-id359 . 5) (undo-tree-id360 . -5)) nil (25629 44804 628974 92000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 2640) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . 5) (undo-tree-id346 . 5) (undo-tree-id347 . 5) (undo-tree-id348 . 5) (undo-tree-id349 . 5) (undo-tree-id350 . 5) (undo-tree-id351 . -5)) nil (25629 44804 628966 610000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2640) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (#(" " 0 1 (fontified t)) . 2640) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (#(" " 0 1 (fontified t)) . 2640) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (#(" " 0 1 (fontified t)) . 2640) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1)) nil (25629 44804 628951 246000) 0 nil])
([nil nil ((2577 . 2584) (t 25629 44804 643052 164000)) nil (25629 44896 633427 575000) 0 nil])
([nil nil ((3912 . 3914) (t 25629 44896 636554 127000)) nil (25629 45087 121906 821000) 0 nil])
([nil nil ((3914 . 3918)) nil (25629 45087 121904 647000) 0 nil])
([nil nil ((3913 . 3914)) nil (25629 45087 121902 965000) 0 nil])
([nil nil ((3914 . 3918)) nil (25629 45087 121901 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4021 . 4022) (nil fontified nil 3918 . 4022) (3918 . 4022)) nil (25629 45087 121898 849000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -3820) (undo-tree-id414 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3821) (undo-tree-id415 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3822) (undo-tree-id416 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3823) (undo-tree-id417 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3824) (undo-tree-id418 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3825) (undo-tree-id419 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3826) (undo-tree-id420 . -1) 3827) nil (25629 45087 121892 299000) 0 nil])
([nil nil ((3820 . 3830)) nil (25629 45087 121876 915000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -3985) (undo-tree-id403 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3986) (undo-tree-id404 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -3987) (undo-tree-id405 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3988) (undo-tree-id406 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -3989) (undo-tree-id407 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3990) (undo-tree-id408 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3991) (undo-tree-id409 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -3992) (undo-tree-id410 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -3993) (undo-tree-id411 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3994) (undo-tree-id412 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3995) (undo-tree-id413 . -1) 3996) nil (25629 45087 121870 205000) 0 nil])
([nil nil ((3985 . 3991)) nil (25629 45087 121834 590000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-string-face)) . -3985) (undo-tree-id397 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3986) (undo-tree-id398 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -3987) (undo-tree-id399 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -3988) (undo-tree-id400 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3989) (undo-tree-id401 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3990) (undo-tree-id402 . -1) 3991) nil (25629 45087 121829 21000) 0 nil])
([nil nil ((3985 . 3996)) nil (25629 45087 121810 92000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3959) (undo-tree-id376 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3960) (undo-tree-id377 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3961) (undo-tree-id378 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3962) (undo-tree-id379 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3963) (undo-tree-id380 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3964) (undo-tree-id381 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3965) (undo-tree-id382 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3966) (undo-tree-id383 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3967) (undo-tree-id384 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3968) (undo-tree-id385 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3969) (undo-tree-id386 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3970) (undo-tree-id387 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3971) (undo-tree-id388 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3972) (undo-tree-id389 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3973) (undo-tree-id390 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -3974) (undo-tree-id391 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3975) (undo-tree-id392 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3976) (undo-tree-id393 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3977) (undo-tree-id394 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3978) (undo-tree-id395 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3979) (undo-tree-id396 . -1) 3980) nil (25629 45087 121796 972000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -3957) (undo-tree-id374 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3958) (undo-tree-id375 . -1) 3959) nil (25629 45087 121743 820000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-string-face)) . -3956) (undo-tree-id373 . -1) 3957) nil (25629 45087 121737 471000) 0 nil])
([nil nil ((3956 . 3961)) nil (25629 45087 121731 792000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3960) (undo-tree-id372 . -1) 3961) nil (25629 45087 121729 418000) 0 nil])
([nil nil ((3960 . 3981)) nil (25629 45087 121725 51000) 0 nil])
([nil nil ((3981 . 3985)) nil (25629 45087 121723 68000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3982) (undo-tree-id369 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3983) (undo-tree-id370 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3984) (undo-tree-id371 . -1) 3985) nil (25629 45087 121717 360000) 0 nil])
([nil nil ((3982 . 3988)) nil (25629 45087 121689 357000) 0 nil])
([nil nil ((1974 . 1978) (#("    " 0 4 (fontified nil)) . 1973) (1973 . 1977) (1973 . 1974) (t 25629 45087 141397 233000)) nil (25629 45127 448874 832000) 0 nil])
([nil nil ((1974 . 1978) (#("    " 0 4 (fontified nil)) . 1973) (1973 . 1977) (1973 . 1974)) nil (25629 45127 448870 706000) 0 nil])
([nil nil ((1978 . 1995)) nil (25629 45130 186674 903000) 0 nil])
([nil nil ((#("assign(socket, results_qty: total_res)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t face elixir-atom-face) 16 17 (fontified t face elixir-atom-face) 17 18 (fontified t face elixir-atom-face) 18 19 (fontified t face elixir-atom-face) 19 20 (fontified t face elixir-atom-face) 20 21 (fontified t face elixir-atom-face) 21 27 (fontified t face elixir-atom-face) 27 38 (fontified t)) . 2016) (undo-tree-id852 . -38) (undo-tree-id853 . -38) (undo-tree-id854 . 1) (undo-tree-id855 . -38) (undo-tree-id856 . 32) (undo-tree-id857 . -7) 2054) nil (25629 45149 949837 544000) 0 nil] [nil nil ((#("t" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id421 . 1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . 1) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . 1) (undo-tree-id456 . 1) (undo-tree-id457 . 1) (undo-tree-id458 . 1) (undo-tree-id459 . 1) (undo-tree-id460 . 1) (#("l" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (undo-tree-id464 . 1) (undo-tree-id465 . 1) (undo-tree-id466 . 1) (undo-tree-id467 . 1) (undo-tree-id468 . 1) (undo-tree-id469 . 1) (undo-tree-id470 . 1) (undo-tree-id471 . 1) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . 1) (undo-tree-id478 . 1) (undo-tree-id479 . 1) (undo-tree-id480 . 1) (undo-tree-id481 . 1) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (undo-tree-id486 . 1) (undo-tree-id487 . 1) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (undo-tree-id494 . 1) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (#("u" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (undo-tree-id517 . 1) (undo-tree-id518 . 1) (undo-tree-id519 . 1) (undo-tree-id520 . 1) (undo-tree-id521 . 1) (undo-tree-id522 . 1) (undo-tree-id523 . 1) (undo-tree-id524 . 1) (undo-tree-id525 . 1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . 1) (undo-tree-id529 . 1) (undo-tree-id530 . 1) (undo-tree-id531 . 1) (undo-tree-id532 . 1) (undo-tree-id533 . 1) (undo-tree-id534 . 1) (#("s" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id537 . 1) (undo-tree-id538 . 1) (undo-tree-id539 . 1) (undo-tree-id540 . 1) (undo-tree-id541 . 1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (undo-tree-id545 . 1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (#("e" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id569 . 1) (undo-tree-id570 . 1) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . 1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . 1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . 1) (undo-tree-id593 . 1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (#("r" 0 1 (fontified nil face elixir-atom-face)) . 2016) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . 1) (undo-tree-id624 . 1) (undo-tree-id625 . 1) (undo-tree-id626 . 1) (undo-tree-id627 . 1) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (undo-tree-id630 . 1) (#(" " 0 1 (fontified nil)) . 2016) (undo-tree-id631 . 1) (undo-tree-id632 . 1) (undo-tree-id633 . 1) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1) (undo-tree-id638 . 1) (undo-tree-id639 . 1) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 1) (undo-tree-id643 . 1) (undo-tree-id644 . 1) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . 1) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1) (undo-tree-id658 . 1) (#("," 0 1 (fontified nil)) . 2016) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . 1) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1) (undo-tree-id668 . 1) (undo-tree-id669 . 1) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 1) (undo-tree-id674 . 1) (undo-tree-id675 . 1) (undo-tree-id676 . 1) (undo-tree-id677 . 1) (undo-tree-id678 . 1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . 1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1) (#("t" 0 1 (fontified nil)) . 2016) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . 1) (undo-tree-id688 . 1) (undo-tree-id689 . 1) (undo-tree-id690 . 1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . 1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . 1) (undo-tree-id697 . 1) (undo-tree-id698 . 1) (undo-tree-id699 . 1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (#("e" 0 1 (fontified nil)) . 2016) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (undo-tree-id714 . 1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . 1) (undo-tree-id721 . 1) (undo-tree-id722 . 1) (undo-tree-id723 . 1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (#("k" 0 1 (fontified nil)) . 2016) (undo-tree-id731 . 1) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (#("c" 0 1 (fontified nil)) . 2016) (undo-tree-id751 . 1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . 1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . 1) (undo-tree-id768 . 1) (#("o" 0 1 (fontified nil)) . 2016) (undo-tree-id769 . 1) (undo-tree-id770 . 1) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . 1) (undo-tree-id774 . 1) (undo-tree-id775 . 1) (undo-tree-id776 . 1) (undo-tree-id777 . 1) (undo-tree-id778 . 1) (undo-tree-id779 . 1) (undo-tree-id780 . 1) (undo-tree-id781 . 1) (undo-tree-id782 . 1) (undo-tree-id783 . 1) (undo-tree-id784 . 1) (#("s" 0 1 (fontified nil)) . 2016) (undo-tree-id785 . 1) (undo-tree-id786 . 1) (undo-tree-id787 . 1) (undo-tree-id788 . 1) (undo-tree-id789 . 1) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . 1) (undo-tree-id793 . 1) (undo-tree-id794 . 1) (undo-tree-id795 . 1) (undo-tree-id796 . 1) (undo-tree-id797 . 1) (undo-tree-id798 . 1) (#("(" 0 1 (fontified nil)) . 2016) (undo-tree-id799 . 1) (undo-tree-id800 . 1) (undo-tree-id801 . 1) (undo-tree-id802 . 1) (undo-tree-id803 . 1) (undo-tree-id804 . 1) (undo-tree-id805 . 1) (undo-tree-id806 . 1) (undo-tree-id807 . 1) (undo-tree-id808 . 1) (undo-tree-id809 . 1) (undo-tree-id810 . 1) (#("n" 0 1 (fontified nil)) . 2016) (undo-tree-id811 . 1) (undo-tree-id812 . 1) (undo-tree-id813 . 1) (undo-tree-id814 . 1) (undo-tree-id815 . 1) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . 1) (undo-tree-id820 . 1) (#("g" 0 1 (fontified nil)) . 2016) (undo-tree-id821 . 1) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . 1) (undo-tree-id825 . 1) (undo-tree-id826 . 1) (undo-tree-id827 . 1) (undo-tree-id828 . 1) (#("i" 0 1 (fontified nil)) . 2016) (undo-tree-id829 . 1) (undo-tree-id830 . 1) (undo-tree-id831 . 1) (undo-tree-id832 . 1) (undo-tree-id833 . 1) (undo-tree-id834 . 1) (#("s" 0 1 (fontified nil)) . 2016) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . 1) (undo-tree-id838 . 1) (#("s" 0 1 (fontified nil)) . 2016) (undo-tree-id839 . 1) (undo-tree-id840 . 1) (#("a" 0 1 (fontified t)) . 2016)) ((2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017) (2016 . 2017)) (25629 45129 851573 218000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1986) (undo-tree-id841 . -1) (#("a" 0 1 (fontified t)) . -1987) (undo-tree-id842 . -1) (#("s" 0 1 (fontified t)) . -1988) (undo-tree-id843 . -1) (#("s" 0 1 (fontified t)) . -1989) (undo-tree-id844 . -1) (#("i" 0 1 (fontified t)) . -1990) (undo-tree-id845 . -1) (#("g" 0 1 (fontified t)) . -1991) (undo-tree-id846 . -1) (#("n" 0 1 (fontified t)) . -1992) (undo-tree-id847 . -1) (#("(" 0 1 (fontified t)) . -1993) (undo-tree-id848 . -1) (#(")" 0 1 (fontified t)) . -1994) (undo-tree-id849 . -1) (undo-tree-id850 . 1) (undo-tree-id851 . -1) 1995) nil (25629 45149 949820 988000) 0 nil])
nil
([nil nil ((1986 . 1987)) nil (25629 45149 949779 645000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2024 . 2025) (nil fontified nil 2014 . 2025) (nil fontified nil 2008 . 2014) (nil fontified nil 2007 . 2008) (nil fontified nil 2006 . 2007) (nil fontified nil 2005 . 2006) (nil fontified nil 2004 . 2005) (nil fontified nil 2003 . 2004) (nil fontified nil 2002 . 2003) (nil fontified nil 2001 . 2002) (nil fontified nil 2000 . 2001) (nil fontified nil 1999 . 2000) (nil fontified nil 1998 . 1999) (nil fontified nil 1997 . 1998) (nil fontified nil 1996 . 1997) (nil fontified nil 1995 . 1996) (nil fontified nil 1994 . 1995) (nil fontified nil 1993 . 1994) (nil fontified nil 1992 . 1993) (nil fontified nil 1991 . 1992) (nil fontified nil 1990 . 1991) (nil fontified nil 1989 . 1990) (nil fontified nil 1988 . 1989) (nil fontified nil 1987 . 1988) (1987 . 2025)) nil (25629 45149 949774 767000) 0 nil])
([nil nil ((2046 . 2051)) nil (25629 45149 949761 757000) 0 nil])
([nil nil ((2047 . 2048)) nil (25629 45149 949754 126000) 0 nil])
([nil nil ((apply 12 3442 3683 undo--wrap-and-run-primitive-undo 3442 3683 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3634) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3620) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3597) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3509) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3456) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3442))) (t 25629 45149 968568 530000)) nil (25629 45287 119193 718000) 0 nil])
([nil nil ((1977 . 1978) (t 25629 45287 123098 537000)) nil (25629 45308 768039 884000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t face font-lock-string-face)) . -6258) (undo-tree-id858 . -1) 6259 (t 25629 45308 771921 436000)) nil (25629 45338 306558 752000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil face font-lock-comment-face)) . 2027) (2027 . 2031) (2027 . 2028) (t 25629 45338 310128 817000)) nil (25629 45774 652861 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2070 . 2071) (nil fontified nil 2041 . 2071) (nil fontified nil 2033 . 2041) (nil fontified nil 2032 . 2033) (2032 . 2071)) nil (25629 45774 652859 229000) 0 nil])
([nil nil ((1934 . 1941)) nil (25629 45774 652855 333000) 0 nil])
([nil nil ((1940 . 1941) (t 25629 45774 669465 299000)) nil (25629 45789 10042 468000) 0 nil])
([nil nil ((1849 . 1856) (t 25629 45789 12710 172000)) nil (25629 45801 978855 597000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1849) (#("," 0 1 (fontified t)) . 1849) (#("s" 0 1 (fontified t)) . 1849) (#("m" 0 1 (fontified t)) . 1849) (#("a" 0 1 (fontified t)) . 1849) (#("r" 0 1 (fontified t)) . 1849) (#("a" 0 1 (fontified t)) . 1849) (#("p" 0 1 (fontified t)) . 1849) (t 25629 45801 980411 70000)) nil (25629 45823 253716 797000) 0 nil])
([nil nil ((#("   {:noreply, get_results(params, socket)}" 0 3 (fontified t) 3 4 (fontified t) 4 12 (fontified t face elixir-atom-face) 12 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 2036) (undo-tree-id895 . -3) (undo-tree-id896 . -42)) nil (25629 45823 253714 463000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1933) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#("a" 0 1 (fontified t)) . -1934) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (#("r" 0 1 (fontified t)) . -1935) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#("a" 0 1 (fontified t)) . -1936) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("m" 0 1 (fontified t)) . -1937) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("s" 0 1 (fontified t)) . -1938) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (#("," 0 1 (fontified t)) . -1939) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (#(" " 0 1 (fontified t)) . -1940) (undo-tree-id894 . -1) 1941) nil (25629 45823 253707 142000) 0 nil])
([nil nil ((3437 . 3441) (#("    " 0 4 (fontified t)) . 3436) (undo-tree-id913 . -4) (3435 . 3441) (t 25629 45823 257357 256000)) nil (25629 45993 224117 543000) 0 nil])
([nil nil ((3437 . 3441) (#("    " 0 4 (fontified nil)) . 3436) (3436 . 3440) (3436 . 3437)) nil (25629 45993 224112 174000) 0 nil])
([nil nil ((3602 . 3606) (#("    " 0 4 (fontified nil)) . 3601) (3601 . 3605) (3601 . 3602)) nil (25629 45993 224108 639000) 0 nil])
([nil nil ((3602 . 3606) (#("    " 0 4 (fontified nil)) . 3601) (3601 . 3605) (3601 . 3602)) nil (25629 45993 224104 983000) 0 nil])
([nil nil ((3606 . 3623)) nil (25629 45993 224101 959000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3622) (undo-tree-id912 . -1) 3623) nil (25629 45993 224099 745000) 0 nil])
([nil nil ((3623 . 3641) (3622 . 3624)) nil (25629 45993 224095 749000) 0 nil])
([nil nil ((3641 . 3642)) nil (25629 45993 224093 466000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3702 . 3703) (nil fontified nil 3702 . 3703) (nil fontified nil 3699 . 3702) (nil fontified nil 3670 . 3699) (nil fontified nil 3668 . 3670) (nil fontified nil 3663 . 3668) (nil fontified nil 3659 . 3663) (nil fontified nil 3656 . 3659) (nil fontified nil 3654 . 3656) (nil fontified nil 3650 . 3654) (nil fontified nil 3645 . 3650) (nil fontified nil 3642 . 3645) (3642 . 3703)) nil (25629 45993 224090 241000) 0 nil])
([nil nil ((apply -6 3713 3807 undo--wrap-and-run-primitive-undo 3713 3807 (("   " . 3713) (3758 . 3760) (3742 . 3744) (3717 . 3719) (3713 . 3716)))) nil (25629 45993 224083 420000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3714) (undo-tree-id911 . -1) 3715) nil (25629 45993 224081 287000) 0 nil])
([nil nil ((3714 . 3718)) nil (25629 45993 224077 100000) 0 nil])
([nil nil ((3810 . 3817)) nil (25629 45993 224075 228000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -3814) (undo-tree-id908 . -1) (#("-" 0 1 (fontified t)) . -3815) (undo-tree-id909 . -1) (#("-" 0 1 (fontified t)) . -3816) (undo-tree-id910 . -1) 3817) nil (25629 45993 224072 163000) 0 nil])
([nil nil ((3814 . 3817)) nil (25629 45993 224063 349000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3742) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 3742)) nil (25629 45993 224060 595000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 3756)) nil (25629 45993 224057 150000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -3714) (undo-tree-id903 . -1) (#("!" 0 1 (fontified t)) . -3715) (undo-tree-id904 . -1) (#("-" 0 1 (fontified t)) . -3716) (undo-tree-id905 . -1) (#("-" 0 1 (fontified t)) . -3717) (undo-tree-id906 . -1) (#(" " 0 1 (fontified t)) . -3718) (undo-tree-id907 . -1) 3719) nil (25629 45993 224052 973000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -3806) (undo-tree-id900 . -1) (#("-" 0 1 (fontified t)) . -3807) (undo-tree-id901 . -1) (#(">" 0 1 (fontified t)) . -3808) (undo-tree-id902 . -1) 3809) nil (25629 45993 224039 403000) 0 nil])
([nil nil ((3804 . 3808) (#("    " 0 4 (fontified t)) . 3803) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (3803 . 3808) (#("    " 0 4 (fontified t)) . 3802) (undo-tree-id899 . -4) (3806 . 3807)) nil (25629 45993 224027 504000) 0 nil])
([nil nil ((apply -6 3710 3808 undo--wrap-and-run-primitive-undo 3710 3808 ((3755 . 3757) (3739 . 3741) (3714 . 3716)))) nil (25629 45993 224001 624000) 0 nil])
([nil nil ((6387 . 6388) (t 25629 45993 233006 280000)) nil (25629 46009 438497 958000) 0 nil])
([nil nil ((3649 . 3650) (t 25629 46009 451629 420000)) nil (25629 46051 499412 487000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3650) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (#(" " 0 1 (fontified t)) . 3650) (undo-tree-id916 . 1) (#(" " 0 1 (fontified t)) . 3650) (#(" " 0 1 (fontified t)) . 3650) (#(" " 0 1 (fontified t)) . 3650) (#(" " 0 1 (fontified t)) . 3650) (#("
" 0 1 (fontified t)) . 3650) (undo-tree-id917 . -1)) nil (25629 46051 499403 72000) 0 nil])
([nil nil ((3602 . 3606) (#("    " 0 4 (fontified nil)) . 3601) (3601 . 3605) (3601 . 3602) (t 25629 46051 517683 521000)) nil (25629 46112 874520 14000) 0 nil])
([nil nil ((3606 . 3612)) nil (25629 46112 874517 129000) 0 nil])
([nil nil ((3609 . 3617) (#("ins" 0 3 (fontified t)) . -3609) (undo-tree-id919 . -3) 3612) nil (25629 46112 874515 256000) 0 nil])
([nil nil ((3617 . 3620)) nil (25629 46112 874511 611000) 0 nil])
([nil nil ((3617 . 3624) (#("ass" 0 3 (fontified t)) . -3617) (undo-tree-id918 . -3) 3620) nil (25629 46112 874509 87000) 0 nil])
([nil nil ((3624 . 3627)) nil (25629 46112 874494 74000) 0 nil])
([nil nil ((3636 . 3637) (#(")" 0 1 (fontified nil)) . -3636) (3627 . 3637)) nil (25629 46112 874487 744000) 0 nil])
([nil nil ((#("    IO.inspect(assigns.page_number)
    assigns = assign(:filtered_results, results |> Enum.map(fn x -> x |> to_keyword_list() end))
" 0 4 (fontified t) 4 6 (fontified t face font-lock-type-face) 6 7 (fontified t) 7 15 (fontified t) 15 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 40 (fontified t) 40 47 (fontified t face font-lock-variable-name-face) 47 56 (fontified t) 56 57 (fontified t) 57 74 (fontified t face elixir-atom-face) 74 76 (fontified t) 76 79 (fontified t) 79 84 (fontified t) 84 87 (fontified t) 87 91 (fontified t face font-lock-type-face) 91 96 (fontified t) 96 98 (fontified t face font-lock-keyword-face) 98 127 (fontified t) 127 130 (fontified t face font-lock-keyword-face) 130 131 (rear-nonsticky t fontified t) 131 132 (fontified t) 132 133 (fontified t)) . -3602) (undo-tree-id923 . -133) (undo-tree-id924 . -76) (undo-tree-id925 . -133) (undo-tree-id926 . -133) (undo-tree-id927 . -36) (undo-tree-id928 . -36) (undo-tree-id929 . -133) (undo-tree-id930 . -133) 3735 (t 25629 46112 893336 31000)) nil (25629 46184 821075 332000) 0 nil])
([nil nil ((apply 6 3607 3699 undo--wrap-and-run-primitive-undo 3607 3699 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3648) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3634) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3611)))) nil (25629 46184 821067 931000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3601) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1)) nil (25629 46184 821064 455000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t face font-lock-string-face)) . -6277) (undo-tree-id931 . -1) 6278 (t 25629 46184 833486 158000)) nil (25629 46206 747519 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3436) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (t 25629 46206 754218 912000)) nil (25630 20330 958830 572000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 3436) (undo-tree-id935 . -5) (undo-tree-id936 . -5) (undo-tree-id937 . -5) (undo-tree-id938 . -5)) nil (25630 20330 958822 840000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 3436) (undo-tree-id932 . -5) (undo-tree-id933 . -5) (undo-tree-id934 . -5)) nil (25630 20330 958811 923000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 3436) (3436 . 3440) (3436 . 3437)) nil (25630 20330 958784 721000) 0 nil])
([nil nil ((4046 . 4047) (#("    
" 0 5 (fontified t face font-lock-string-face)) . -4046) (#("
    
" 0 5 (fontified t) 5 6 (fontified t)) . -3684) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (3629 . 3683) (#("       |> Enum.map(fn x -> x |> to_keyword_list() end)
" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 10 (fontified t) 10 14 (fontified t face font-lock-type-face) 14 19 (fontified t) 19 21 (fontified t face font-lock-keyword-face) 21 50 (fontified t) 50 53 (fontified t face font-lock-keyword-face) 53 55 (fontified t)) . -3629) (undo-tree-id948 . -55) (undo-tree-id949 . -55) (undo-tree-id950 . -55) (undo-tree-id951 . -55) (3591 . 3592) (#("    
" 0 4 (fontified t) 4 5 (fontified t)) . -3591) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -5) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (#("
" 0 1 (fontified t)) . -3437) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (2580 . 2667) (#("    socket = assign(socket,page_number: params[\"page_number\"] |> String.to_integer())
" 4 10 (face font-lock-variable-name-face) 27 39 (face elixir-atom-face) 47 48 (face font-lock-string-face syntax-table (15)) 48 59 (face font-lock-string-face) 59 60 (face font-lock-string-face syntax-table (15)) 65 71 (face font-lock-type-face) 83 84 (rear-nonsticky t)) . -2580) (#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . -2029) (undo-tree-id961 . -1) (1974 . 2028) (#("   # socket = assign(socket, results_qty: total_res)
" 0 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 11 (fontified t face font-lock-comment-face) 11 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-face) 29 30 (fontified t face font-lock-comment-face) 30 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 35 (fontified t face font-lock-comment-face) 35 41 (fontified t face font-lock-comment-face) 41 51 (fontified t face font-lock-comment-face) 51 52 (rear-nonsticky t fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face)) . -1974) (undo-tree-id962 . -4) (1816 . 1859) (#("    |> tap(&get_total_results(&1,socket))
" 0 42 (fontified t)) . -1816) (t 25630 20330 970377 216000)) nil (25630 24911 714260 347000) 0 nil])
([nil nil ((#("|> tap(&IO.inspect(&1))" 0 7 (fontified t) 7 10 (face font-lock-type-face fontified t) 10 14 (fontified t) 14 23 (fontified t)) . 2056) (undo-tree-id942 . -14) (undo-tree-id943 . -23)) nil (25630 24911 714241 258000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1978) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1979) (undo-tree-id965 . -1) 1980 (t 25630 24911 763735 87000)) nil (25630 25258 953378 151000) 0 nil])
([nil nil ((apply -12 3412 3670 undo--wrap-and-run-primitive-undo 3412 3670 ((3618 . 3620) (3602 . 3604) (3577 . 3579) (3487 . 3489) (3432 . 3434) (3416 . 3418))) (t 25630 25258 956632 370000)) nil (25630 25279 500077 486000) 0 nil])
([nil nil ((6238 . 6239) (t 25630 25279 509818 499000)) nil (25630 25299 176320 855000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -6239) (undo-tree-id966 . -1) (undo-tree-id967 . 1) 6240) nil (25630 25299 176317 49000) 0 nil])
([nil nil ((2643 . 2647) (#("    " 0 4 (fontified t)) . 2642) (undo-tree-id990 . -4) (2641 . 2647) (t 25630 25299 187294 946000)) nil (25630 25461 767596 197000) 0 nil])
([nil nil ((2643 . 2647) (#("    " 0 4 (fontified nil)) . 2642) (2642 . 2646) (2642 . 2643)) nil (25630 25461 767594 284000) 0 nil])
([nil nil ((2556 . 2560) (#("    " 0 4 (fontified t)) . 2555) (undo-tree-id989 . -4) (2554 . 2560)) nil (25630 25461 767592 902000) 0 nil])
([nil nil ((2556 . 2560) (#("    " 0 4 (fontified nil)) . 2555) (2555 . 2559) (2555 . 2556)) nil (25630 25461 767591 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2811 . 2812) (nil fontified nil 2810 . 2812) (nil fontified nil 2807 . 2810) (nil fontified nil 2778 . 2807) (nil fontified nil 2776 . 2778) (nil fontified nil 2771 . 2776) (nil fontified nil 2767 . 2771) (nil fontified nil 2764 . 2767) (nil fontified nil 2762 . 2764) (nil fontified nil 2760 . 2762) (nil fontified nil 2756 . 2760) (nil fontified nil 2751 . 2756) (nil fontified nil 2748 . 2751) (nil fontified nil 2746 . 2748) (nil fontified nil 2744 . 2746) (nil fontified nil 2740 . 2744) (nil fontified nil 2737 . 2740) (nil fontified nil 2729 . 2737) (nil fontified nil 2721 . 2729) (nil fontified nil 2719 . 2721) (nil fontified nil 2718 . 2719) (nil fontified nil 2715 . 2718) (nil fontified nil 2714 . 2715) (nil fontified nil 2693 . 2714) (nil fontified nil 2683 . 2693) (nil fontified nil 2681 . 2683) (nil fontified nil 2667 . 2681) (nil fontified nil 2661 . 2667) (nil fontified nil 2656 . 2661) (nil fontified nil 2633 . 2656) (nil fontified nil 2631 . 2633) (nil fontified nil 2629 . 2631) (nil fontified nil 2625 . 2629) (nil fontified nil 2623 . 2625) (nil fontified nil 2616 . 2623) (nil fontified nil 2578 . 2616) (nil fontified nil 2576 . 2578) (nil fontified nil 2574 . 2576) (nil fontified nil 2570 . 2574) (nil fontified nil 2569 . 2570) (nil fontified nil 2567 . 2569) (nil fontified nil 2560 . 2567) (2560 . 2812)) nil (25630 25461 767588 4000) 0 nil])
([nil nil ((apply 10 2574 2802 undo--wrap-and-run-primitive-undo 2574 2802 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2752) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2738) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2715) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2627) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2574)))) nil (25630 25461 767581 304000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -2727) (undo-tree-id985 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -2728) (undo-tree-id986 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2729) (undo-tree-id987 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -2730) (undo-tree-id988 . -1) 2731) nil (25630 25461 767579 811000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -2563) (undo-tree-id981 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -2564) (undo-tree-id982 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2565) (undo-tree-id983 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -2566) (undo-tree-id984 . -1) 2567) nil (25630 25461 767575 585000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2735) (undo-tree-id977 . -1) (#("l" 0 1 (fontified t)) . -2736) (undo-tree-id978 . -1) (#("t" 0 1 (fontified t)) . -2737) (undo-tree-id979 . -1) (#("s" 0 1 (fontified t)) . -2738) (undo-tree-id980 . -1) 2739) nil (25630 25461 767570 798000) 0 nil])
([nil nil ((2881 . 2882)) nil (25630 25461 767486 688000) 0 nil])
([nil nil ((2882 . 2894)) nil (25630 25461 767485 997000) 0 nil])
([nil nil ((2894 . 2908)) nil (25630 25461 767485 6000) 0 nil])
([nil nil ((2900 . 2912) (#("filtered" 0 8 (fontified t)) . -2900) (undo-tree-id968 . -8) (undo-tree-id969 . -1) (undo-tree-id970 . -2) (undo-tree-id971 . -3) (undo-tree-id972 . -4) (undo-tree-id973 . -5) (undo-tree-id974 . -6) (undo-tree-id975 . -8) (undo-tree-id976 . -7) 2908) nil (25630 25461 767481 430000) 0 nil])
([nil nil ((2536 . 2545) (t 25630 25461 781391 130000)) nil (25630 25474 227163 337000) 0 nil])
([nil nil ((2565 . 2569) (#("    " 0 4 (fontified t)) . 2564) (undo-tree-id995 . -4) (2563 . 2569) (t 25630 25474 249257 734000)) nil (25630 25567 191440 954000) 0 nil])
([nil nil ((2569 . 2573)) nil (25630 25567 191439 351000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-type-face)) . -2571) (undo-tree-id993 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -2572) (undo-tree-id994 . -1) 2573) nil (25630 25567 191438 270000) 0 nil])
([nil nil ((2571 . 2573)) nil (25630 25567 191435 435000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2572) (undo-tree-id992 . -1) 2573) nil (25630 25567 191434 364000) 0 nil])
([nil nil ((2572 . 2575)) nil (25630 25567 191432 431000) 0 nil])
([nil nil ((2572 . 2580) (#("ins" 0 3 (fontified t)) . -2572) (undo-tree-id991 . -3) 2575) nil (25630 25567 191431 189000) 0 nil])
([nil nil ((2580 . 2588)) nil (25630 25567 191419 851000) 0 nil])
([nil nil ((2600 . 2601) (#(")" 0 1 (fontified nil)) . -2600) (2588 . 2601)) nil (25630 25567 191415 635000) 0 nil])
([nil nil ((#("    IO.inspect(assigns.query_params)" 0 4 (fontified t) 4 6 (fontified t face font-lock-type-face) 6 7 (fontified t) 7 35 (fontified t) 35 36 (fontified t)) . 2565) (undo-tree-id1007 . -36) (t 25630 25567 194444 191000)) nil (25630 26399 634602 35000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2565) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . 1) (undo-tree-id1006 . -1)) nil (25630 26399 634599 121000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2565) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . 1) (undo-tree-id1000 . 1) (undo-tree-id1001 . -1)) nil (25630 26399 634591 799000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2663) (undo-tree-id1077 . -1) (#("s" 0 1 (fontified t)) . -2664) (undo-tree-id1078 . -1) (#("s" 0 1 (fontified t)) . -2665) (undo-tree-id1079 . -1) (#("i" 0 1 (fontified t)) . -2666) (undo-tree-id1080 . -1) (#("g" 0 1 (fontified t)) . -2667) (undo-tree-id1081 . -1) (#("n" 0 1 (fontified t)) . -2668) (undo-tree-id1082 . -1) (#("s" 0 1 (fontified t)) . -2669) (undo-tree-id1083 . -1) (#("." 0 1 (fontified t)) . -2670) (undo-tree-id1084 . -1) 2671 (t 25630 26399 642467 839000)) nil (25630 26459 436195 920000) 0 nil])
([nil nil ((2663 . 2667)) nil (25630 26459 436181 307000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2665) (undo-tree-id1075 . -1) (#("r" 0 1 (fontified t)) . -2666) (undo-tree-id1076 . -1) 2667) nil (25630 26459 436178 954000) 0 nil])
([nil nil ((2672 . 2679) (2671 . 2673) (#("\"" 0 1 (fontified nil syntax-table (15))) . -2671) (2671 . 2672) (2665 . 2672)) nil (25630 26459 436172 434000) 0 nil])
([nil nil ((2679 . 2683)) nil (25630 26459 436168 318000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2669) (undo-tree-id1074 . -1) 2670) nil (25630 26459 436165 543000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2684) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (#("a" 0 1 (fontified t)) . -2685) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (#("g" 0 1 (fontified t)) . -2686) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("e" 0 1 (fontified t)) . -2687) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (#("_" 0 1 (fontified t)) . -2688) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#("n" 0 1 (fontified t)) . -2689) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("u" 0 1 (fontified t)) . -2690) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (#("m" 0 1 (fontified t)) . -2691) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("b" 0 1 (fontified t)) . -2692) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("e" 0 1 (fontified t)) . -2693) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (#("r" 0 1 (fontified t)) . -2694) (undo-tree-id1073 . -1) 2695) nil (25630 26459 436150 140000) 0 nil])
([nil nil ((2958 . 2963) (t 25630 26459 446641 329000)) nil (25630 26534 692350 554000) 0 nil])
([nil nil ((2963 . 2967)) nil (25630 26534 692348 440000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2966) (undo-tree-id1090 . -1) 2967) nil (25630 26534 692346 267000) 0 nil])
([nil nil ((2970 . 2979) (2966 . 2971)) nil (25630 26534 692341 971000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2976) (undo-tree-id1087 . -1) (#("p" 0 1 (fontified t)) . -2977) (undo-tree-id1088 . -1) (#("s" 0 1 (fontified t)) . -2978) (undo-tree-id1089 . -1) 2979) nil (25630 26534 692338 485000) 0 nil])
([nil nil ((2976 . 2978)) nil (25630 26534 692330 473000) 0 nil])
([nil nil ((2974 . 2983) (#("insp" 0 4 (fontified t)) . -2974) (undo-tree-id1086 . -4) 2978) nil (25630 26534 692327 278000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2981) (undo-tree-id1085 . -1) (#("1" 0 1 (fontified t)) . -2982) 2983) nil (25630 26534 692319 836000) 0 nil])
([nil nil ((2982 . 2984) (2981 . 2983)) nil (25630 26534 692297 292000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t face elixir-attribute-face)) . -2619) (undo-tree-id1091 . -1) 2620 (t 25630 26534 709689 836000)) nil (25632 59686 321793 786000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2564) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1)) ((2564 . 2565)) (25632 59686 654087 886000) 0 nil])
([nil nil ((#("    res =
      process_request(assigns.query_params, socket)
      |> paginate_response(%{page: params[\"page_number\"], page_size: assigns.page_size})

    filtered_res =
      res
      |> Enum.map(fn x -> x |> to_keyword_list() end)
" 0 4 (fontified t) 4 7 (fontified t face font-lock-variable-name-face) 7 9 (fontified t) 9 10 (fontified t) 10 14 (fontified t) 14 16 (fontified t) 16 54 (fontified t) 54 60 (fontified t) 60 62 (fontified t) 62 66 (fontified t) 66 68 (fontified t) 68 91 (fontified t) 91 96 (fontified t face elixir-atom-face) 96 103 (fontified t) 103 104 (fontified t) 104 105 (syntax-table (15) fontified t face font-lock-string-face) 105 116 (fontified t face font-lock-string-face) 116 117 (syntax-table (15) fontified t face font-lock-string-face) 117 118 (fontified t) 118 120 (fontified t) 120 130 (fontified t face elixir-atom-face) 130 151 (fontified t) 151 152 (fontified t) 152 155 (fontified t) 155 156 (fontified t) 156 164 (fontified t face font-lock-variable-name-face) 164 168 (fontified t face font-lock-variable-name-face) 168 171 (fontified t) 171 175 (fontified t) 175 177 (fontified t) 177 180 (fontified t) 180 181 (fontified t) 181 185 (fontified t) 185 187 (fontified t) 187 190 (fontified t) 190 194 (fontified t face font-lock-type-face) 194 199 (fontified t) 199 201 (fontified t face font-lock-keyword-face) 201 230 (fontified t) 230 233 (fontified t face font-lock-keyword-face) 233 234 (fontified t) 234 235 (rear-nonsticky t fontified t)) . -2564) (undo-tree-id1133 . -235) (undo-tree-id1134 . -4) (undo-tree-id1135 . -181) (undo-tree-id1136 . -181) (undo-tree-id1137 . -171) (undo-tree-id1138 . -171) (undo-tree-id1139 . -152) (undo-tree-id1140 . -152) (undo-tree-id1141 . -151) (undo-tree-id1142 . -151) (undo-tree-id1143 . -62) (undo-tree-id1144 . -62) (undo-tree-id1145 . -14) (undo-tree-id1146 . -10) (undo-tree-id1147 . -10) (undo-tree-id1148 . -235) (undo-tree-id1149 . -235) (undo-tree-id1150 . -235) (undo-tree-id1151 . -235) (undo-tree-id1152 . -235) 2799) nil (25632 59698 767395 160000) 0 nil] [nil nil ((#("def handle_event(\"page_change\", assigns, params, socket) do
    res =
      process_request(assigns.query_params, socket)
      |> paginate_response(%{page: params[\"page_number\"], page_size: assigns.page_size})

    filtered_res =
      res
      |> Enum.map(fn x -> x |> to_keyword_list() end)

" 0 1 (fontified t face font-lock-keyword-face) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t) 17 18 (fontified t syntax-table (15) face font-lock-string-face) 18 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 29 (fontified t face font-lock-string-face) 29 30 (fontified t syntax-table (15) face font-lock-string-face) 30 50 (fontified t) 50 57 (fontified t) 57 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t) 60 64 (fontified t) 64 67 (fontified t face font-lock-variable-name-face) 67 69 (fontified t) 69 70 (fontified t) 70 74 (fontified t) 74 76 (fontified t) 76 114 (fontified t) 114 120 (fontified t) 120 122 (fontified t) 122 126 (fontified t) 126 128 (fontified t) 128 151 (fontified t) 151 156 (fontified t face elixir-atom-face) 156 163 (fontified t) 163 164 (fontified t) 164 165 (syntax-table (15) fontified t face font-lock-string-face) 165 176 (fontified t face font-lock-string-face) 176 177 (syntax-table (15) fontified t face font-lock-string-face) 177 178 (fontified t) 178 180 (fontified t) 180 190 (fontified t face elixir-atom-face) 190 211 (fontified t) 211 212 (fontified t) 212 215 (fontified t) 215 216 (fontified t) 216 224 (fontified t face font-lock-variable-name-face) 224 228 (fontified t face font-lock-variable-name-face) 228 231 (fontified t) 231 235 (fontified t) 235 237 (fontified t) 237 240 (fontified t) 240 241 (fontified t) 241 245 (fontified t) 245 247 (fontified t) 247 250 (fontified t) 250 254 (fontified t face font-lock-type-face) 254 259 (fontified t) 259 261 (fontified t face font-lock-keyword-face) 261 290 (fontified t) 290 293 (fontified t face font-lock-keyword-face) 293 294 (fontified t) 294 295 (rear-nonsticky t fontified t) 295 296 (fontified t)) . -2504) (undo-tree-id1094 . -296) (undo-tree-id1095 . -295) (undo-tree-id1096 . -241) (undo-tree-id1097 . -241) (undo-tree-id1098 . -295) (undo-tree-id1099 . -295) (undo-tree-id1100 . -64) (undo-tree-id1101 . -295) (undo-tree-id1102 . -296) (undo-tree-id1104 . -60) (undo-tree-id1105 . -231) (undo-tree-id1106 . -231) (undo-tree-id1107 . -212) (undo-tree-id1108 . -212) (undo-tree-id1109 . -211) (undo-tree-id1110 . -211) (undo-tree-id1111 . -122) (undo-tree-id1112 . -122) (undo-tree-id1113 . -70) (undo-tree-id1114 . -70) (undo-tree-id1115 . -74) (undo-tree-id1116 . -296) (undo-tree-id1117 . -296) (undo-tree-id1118 . -296) 2800) ((2504 . 2800)) (25632 59683 557058 350000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2564) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1)) nil (25632 59698 767358 43000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#(",filtered_results: filtered_res" 0 1 (fontified t) 1 18 (fontified t face elixir-atom-face) 18 19 (fontified t) 19 31 (fontified t)) . -2594) (undo-tree-id1092 . -31) (undo-tree-id1093 . -31) 2625) ((2594 . 2625) (t 25632 59679 194144 196000)) (25632 59679 170493 954000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 2564) (undo-tree-id1126 . -5) (undo-tree-id1127 . -5) (undo-tree-id1128 . -5) (undo-tree-id1129 . -5)) nil (25632 59698 767349 29000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil
([nil nil ((#(",filtered_results: filtered_res" 0 1 (fontified t) 1 18 (fontified t face elixir-atom-face) 18 19 (fontified t) 19 31 (fontified t)) . -2649) (undo-tree-id1124 . -31) (undo-tree-id1125 . -31) 2680) nil (25632 59709 924957 221000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((apply 12 3460 3706 undo--wrap-and-run-primitive-undo 3460 3706 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3656) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3642) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3619) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3531) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3478) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3464) (#<marker at 3711 in results_table_live.ex> . -2))) (t 25632 59698 775652 460000)) nil (25632 59719 923874 434000) 0 nil] [nil nil ((#("# results =
    #   process_request(assigns.query_params, @socket)
    #   |> paginate_response(%{page: assigns.page_number, page_size: assigns.page_size})

    # filtered_results =
    #   results
    #   |> Enum.map(fn x -> x |> to_keyword_list() end)
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 9 (fontified t face font-lock-comment-face) 9 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 16 (fontified t) 16 18 (fontified t face font-lock-comment-delimiter-face) 18 20 (fontified t face font-lock-comment-delimiter-face) 20 31 (fontified t face font-lock-comment-face) 31 58 (fontified t face font-lock-comment-face) 58 65 (fontified t face font-lock-comment-face) 65 67 (fontified t face font-lock-comment-face) 67 71 (fontified t) 71 73 (fontified t face font-lock-comment-delimiter-face) 73 75 (fontified t face font-lock-comment-delimiter-face) 75 98 (fontified t face font-lock-comment-face) 98 103 (fontified t face font-lock-comment-face) 103 109 (fontified t face font-lock-comment-face) 109 123 (fontified t face font-lock-comment-face) 123 125 (fontified t face font-lock-comment-face) 125 135 (fontified t face font-lock-comment-face) 135 156 (fontified t face font-lock-comment-face) 156 157 (fontified t) 157 160 (fontified t) 160 161 (fontified t) 161 163 (fontified t face font-lock-comment-delimiter-face) 163 171 (fontified t face font-lock-comment-face) 171 179 (fontified t face font-lock-comment-face) 179 182 (fontified t face font-lock-comment-face) 182 186 (fontified t) 186 188 (fontified t face font-lock-comment-delimiter-face) 188 190 (fontified t face font-lock-comment-delimiter-face) 190 193 (fontified t face font-lock-comment-face) 193 198 (face font-lock-comment-face fontified t) 198 202 (fontified t) 202 204 (fontified t face font-lock-comment-delimiter-face) 204 206 (fontified t face font-lock-comment-delimiter-face) 206 209 (fontified t face font-lock-comment-face) 209 213 (fontified t face font-lock-comment-face) 213 218 (fontified t face font-lock-comment-face) 218 220 (fontified t face font-lock-comment-face) 220 249 (fontified t face font-lock-comment-face) 249 252 (fontified t face font-lock-comment-face) 252 254 (fontified t face font-lock-comment-face)) . -3464) (undo-tree-id1153 . -156) (undo-tree-id1154 . -254) (undo-tree-id1155 . -2) (undo-tree-id1156 . -198) (undo-tree-id1157 . -254) (undo-tree-id1158 . -254) (undo-tree-id1159 . -198) (undo-tree-id1160 . -198) (undo-tree-id1161 . -182) (undo-tree-id1162 . -182) (undo-tree-id1163 . -254) (undo-tree-id1164 . -12) (undo-tree-id1165 . -12) (undo-tree-id1166 . -67) (undo-tree-id1167 . -67) (undo-tree-id1168 . -156) (undo-tree-id1169 . -156) (undo-tree-id1170 . -157) (undo-tree-id1171 . -157) (undo-tree-id1172 . -254) (undo-tree-id1173 . -254) (undo-tree-id1174 . -254) 3718 (t 25632 59698 775652 460000)) ((3464 . 3718)) (25632 59709 314606 395000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((apply -4 1974 2053 undo--wrap-and-run-primitive-undo 1974 2053 ((2033 . 2035) (1978 . 1980))) (t 25632 59719 944634 439000)) nil (25632 59751 784342 340000) 0 nil])
nil
([nil nil ((#("@" 0 1 (fontified t face font-lock-string-face)) . -6278) (undo-tree-id1175 . -1) 6279 (t 25632 59751 802072 939000)) nil (25632 59782 93105 309000) 0 nil])
([nil nil ((6278 . 6279)) nil (25632 59782 93091 287000) 0 nil])
([nil nil ((6279 . 6281) (t 25632 59782 96029 769000)) nil (25632 59814 606500 750000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -6279) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -6280) (undo-tree-id1179 . -1) 6281) nil (25632 59814 606493 659000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2655) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (t 25632 59814 629244 235000)) nil (25632 59927 261927 507000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 2655) (undo-tree-id1189 . -5) (undo-tree-id1190 . -5) (undo-tree-id1191 . -5)) nil (25632 59927 261924 663000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1973) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1)) nil (25632 59927 261921 268000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2027) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1)) nil (25632 59927 261911 172000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2537) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (#("a" 0 1 (fontified t)) . -2538) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("s" 0 1 (fontified t)) . -2539) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("s" 0 1 (fontified t)) . -2540) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("i" 0 1 (fontified t)) . -2541) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (#("g" 0 1 (fontified t)) . -2542) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (#("n" 0 1 (fontified t)) . -2543) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("s" 0 1 (fontified t)) . -2544) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (#("," 0 1 (fontified t)) . -2545) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#(" " 0 1 (fontified t)) . -2546) (undo-tree-id1249 . -1) 2547 (t 25632 59927 303889 905000)) nil (25632 60019 569074 439000) 0 nil])
([nil nil ((1731 . 1735) (#("    " 0 4 (fontified nil)) . 1730) (1730 . 1734) (1730 . 1731) (t 25632 60019 581297 746000)) nil (25632 60860 639353 959000) 0 nil])
([nil nil ((1731 . 1735) (#("    " 0 4 (fontified nil)) . 1730) (1730 . 1734) (1730 . 1731)) nil (25632 60860 639350 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1857 . 1858) (nil fontified nil 1816 . 1858) (nil fontified nil 1799 . 1816) (nil fontified nil 1798 . 1799) (nil fontified nil 1794 . 1798) (nil fontified nil 1793 . 1794) (nil fontified nil 1786 . 1793) (nil fontified nil 1783 . 1786) (nil fontified nil 1765 . 1783) (nil fontified nil 1760 . 1765) (nil fontified nil 1735 . 1760) (1735 . 1858)) nil (25632 60860 639345 746000) 0 nil])
([nil nil ((1735 . 1747)) nil (25632 60860 639339 156000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1840) (undo-tree-id1299 . -1) (#("e" 0 1 (fontified t)) . -1841) (undo-tree-id1300 . -1) (#("t" 0 1 (fontified t)) . -1842) (undo-tree-id1301 . -1) (#("_" 0 1 (fontified t)) . -1843) (undo-tree-id1302 . -1) (#("t" 0 1 (fontified t)) . -1844) (undo-tree-id1303 . -1) (#("o" 0 1 (fontified t)) . -1845) (undo-tree-id1304 . -1) (#("t" 0 1 (fontified t)) . -1846) (undo-tree-id1305 . -1) (#("a" 0 1 (fontified t)) . -1847) (undo-tree-id1306 . -1) (#("l" 0 1 (fontified t)) . -1848) (undo-tree-id1307 . -1) (#("_" 0 1 (fontified t)) . -1849) (undo-tree-id1308 . -1) (#("r" 0 1 (fontified t)) . -1850) (undo-tree-id1309 . -1) (#("e" 0 1 (fontified t)) . -1851) (undo-tree-id1310 . -1) (#("s" 0 1 (fontified t)) . -1852) (undo-tree-id1311 . -1) (#("u" 0 1 (fontified t)) . -1853) (undo-tree-id1312 . -1) (#("l" 0 1 (fontified t)) . -1854) (undo-tree-id1313 . -1) (#("t" 0 1 (fontified t)) . -1855) (undo-tree-id1314 . -1) (#("s" 0 1 (fontified t)) . -1856) (undo-tree-id1315 . -1) 1857) nil (25632 60860 639330 563000) 0 nil])
([nil nil ((1840 . 1846)) nil (25632 60860 639191 198000) 0 nil])
([nil nil ((1843 . 1850) (#("ins" 0 3 (fontified t)) . -1843) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) 1846) nil (25632 60860 639187 82000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1853) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (#(" " 0 1 (fontified t)) . -1854) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (#("s" 0 1 (fontified t)) . -1855) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("o" 0 1 (fontified t)) . -1856) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (#("c" 0 1 (fontified t)) . -1857) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (#("k" 0 1 (fontified t)) . -1858) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (#("e" 0 1 (fontified t)) . -1859) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (#("t" 0 1 (fontified t)) . -1860) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (#(")" 0 1 (fontified t)) . -1861) (undo-tree-id1294 . -1) (undo-tree-id1295 . 1) (undo-tree-id1296 . -1) 1862) nil (25632 60860 639162 574000) 0 nil])
([nil nil ((1854 . 1855) (#(")" 0 1 (fontified nil)) . -1854) (1854 . 1855) (t 25632 60860 662459 305000)) nil (25632 60866 6841 150000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1835) (undo-tree-id1316 . -1) (#("a" 0 1 (fontified t)) . -1836) (undo-tree-id1317 . -1) (#("p" 0 1 (fontified t)) . -1837) (undo-tree-id1318 . -1) (#("(" 0 1 (fontified t)) . -1838) (undo-tree-id1319 . -1) (#("&" 0 1 (fontified t)) . -1839) (undo-tree-id1320 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1840) (undo-tree-id1321 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1841) (undo-tree-id1322 . -1) (#("." 0 1 (fontified t)) . -1842) (undo-tree-id1323 . -1) (#("i" 0 1 (fontified t)) . -1843) (undo-tree-id1324 . -1) (#("n" 0 1 (fontified t)) . -1844) (undo-tree-id1325 . -1) (#("s" 0 1 (fontified t)) . -1845) (undo-tree-id1326 . -1) (#("p" 0 1 (fontified t)) . -1846) (undo-tree-id1327 . -1) (#("e" 0 1 (fontified t)) . -1847) (undo-tree-id1328 . -1) (#("c" 0 1 (fontified t)) . -1848) (undo-tree-id1329 . -1) (#("t" 0 1 (fontified t)) . -1849) (undo-tree-id1330 . -1) (#("(" 0 1 (fontified t)) . -1850) (undo-tree-id1331 . -1) (#("&" 0 1 (fontified t)) . -1851) (undo-tree-id1332 . -1) (#("1" 0 1 (fontified t)) . -1852) (undo-tree-id1333 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -1853) (undo-tree-id1334 . -1) (undo-tree-id1335 . 1) (undo-tree-id1336 . -1) (#(")" 0 1 (fontified t)) . -1854) (undo-tree-id1337 . -1) (undo-tree-id1338 . 1) (undo-tree-id1339 . -1) 1855 (t 25632 60866 16684 251000)) nil (25632 60936 394184 402000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1836) (1836 . 1837) (#("]" 0 1 (fontified nil)) . -1836) (1836 . 1837) (1835 . 1837)) nil (25632 60936 394127 474000) 0 nil])
([nil nil ((1837 . 1842) (1836 . 1838) (#("\"" 0 1 (fontified nil syntax-table (15))) . -1836) (1836 . 1837)) nil (25632 60936 394119 322000) 0 nil])
([nil nil ((1835 . 1842) (t 25632 60936 421343 430000)) nil (25632 60958 63365 365000) 0 nil])
([nil nil ((1839 . 1845) (#("fet" 0 3 (fontified t)) . -1839) (undo-tree-id1345 . -3) 1842) nil (25632 60958 63362 421000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1845) (undo-tree-id1343 . -1) (undo-tree-id1344 . 1) 1846) nil (25632 60958 63356 762000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1852) (undo-tree-id1340 . -1) (undo-tree-id1341 . 1) (undo-tree-id1342 . -1) 1853) nil (25632 60958 63348 940000) 0 nil])
([nil nil ((nil face font-lock-string-face 1852 . 1853) (nil fontified nil 1852 . 1853) (1852 . 1853) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -1852) (1852 . 1853)) nil (25632 60958 63321 668000) 0 nil])
([nil nil ((1853 . 1858) (t 25632 60958 118150 421000)) nil (25632 60973 922097 833000) 0 nil])
([nil nil ((1858 . 1863)) nil (25632 60973 922096 50000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1861) (undo-tree-id1348 . -1) (#("a" 0 1 (fontified t)) . -1862) (undo-tree-id1349 . -1) 1863) nil (25632 60973 922093 857000) 0 nil])
([nil nil ((1861 . 1867)) nil (25632 60973 922088 769000) 0 nil])
([nil nil ((1864 . 1872) (#("ins" 0 3 (fontified t)) . -1864) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) 1867) nil (25632 60973 922084 883000) 0 nil])
([nil nil ((1872 . 1873) (#(")" 0 1 (fontified nil)) . -1872) (1872 . 1873)) nil (25632 60973 922062 549000) 0 nil])
([nil nil ((1873 . 1878) (t 25632 60973 944903 475000)) nil (25632 60981 995535 426000) 0 nil])
([nil nil ((1886 . 1887) (1878 . 1887)) nil (25632 60981 995527 424000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1869) (undo-tree-id1368 . -1) (#("t" 0 1 (fontified t)) . -1870) (undo-tree-id1369 . -1) (#("(" 0 1 (fontified t)) . -1871) (undo-tree-id1370 . -1) (#(")" 0 1 (fontified t)) . -1872) (undo-tree-id1371 . -1) (undo-tree-id1372 . 1) (undo-tree-id1373 . -1) 1873 (t 25632 60982 18226 976000)) nil (25632 60995 983152 642000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1858) (undo-tree-id1357 . -1) (#(">" 0 1 (fontified t)) . -1859) (undo-tree-id1358 . -1) (#(" " 0 1 (fontified t)) . -1860) (undo-tree-id1359 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1861) (undo-tree-id1360 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1862) (undo-tree-id1361 . -1) (#("." 0 1 (fontified t)) . -1863) (undo-tree-id1362 . -1) (#("i" 0 1 (fontified t)) . -1864) (undo-tree-id1363 . -1) (#("n" 0 1 (fontified t)) . -1865) (undo-tree-id1364 . -1) (#("s" 0 1 (fontified t)) . -1866) (undo-tree-id1365 . -1) (#("p" 0 1 (fontified t)) . -1867) (undo-tree-id1366 . -1) (#("e" 0 1 (fontified t)) . -1868) (undo-tree-id1367 . -1) 1869) nil (25632 60995 983134 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1858) (#(" " 0 1 (fontified t)) . 1858) (#(" " 0 1 (fontified t)) . 1858) (#(" " 0 1 (fontified t)) . 1858) (#("
" 0 1 (fontified t)) . 1858) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1)) nil (25632 60995 983109 405000) 0 nil])
([nil nil ((1868 . 1873)) nil (25632 60995 983099 921000) 0 nil])
([nil nil ((1873 . 1882)) nil (25632 60995 983097 828000) 0 nil])
([nil nil ((1879 . 1887) (#("ins" 0 3 (fontified t)) . -1879) (undo-tree-id1350 . -3) (undo-tree-id1351 . -3) (undo-tree-id1352 . -1) (undo-tree-id1353 . -2) 1882) nil (25632 60995 983093 501000) 0 nil])
([nil nil ((1887 . 1888) (#(")" 0 1 (fontified nil)) . -1887) (1887 . 1888)) nil (25632 60995 983048 71000) 0 nil])
([nil nil ((#("|> tap(&get_total_results(&1, socket))" 0 38 (fontified t)) . 1983) (undo-tree-id1392 . -38) (t 25632 60995 993593 810000)) nil (25632 61008 727880 810000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1983) (undo-tree-id1374 . 1) (undo-tree-id1375 . 1) (undo-tree-id1376 . 1) (undo-tree-id1377 . 1) (undo-tree-id1378 . 1) (#(" " 0 1 (fontified t)) . 1983) (undo-tree-id1379 . 1) (undo-tree-id1380 . 1) (undo-tree-id1381 . 1) (undo-tree-id1382 . 1) (#(" " 0 1 (fontified t)) . 1983) (undo-tree-id1383 . 1) (undo-tree-id1384 . 1) (undo-tree-id1385 . 1) (#(" " 0 1 (fontified t)) . 1983) (undo-tree-id1386 . 1) (undo-tree-id1387 . 1) (#("
" 0 1 (fontified t)) . 1983) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . 1)) nil (25632 61008 727875 562000) 0 nil])
([nil nil ((2018 . 2023) (t 25632 61008 733370 271000)) nil (25632 61033 512814 210000) 0 nil])
([nil nil ((2023 . 2024)) nil (25632 61033 512813 268000) 0 nil])
([nil nil ((2024 . 2026)) nil (25632 61033 512812 547000) 0 nil])
([nil nil ((2018 . 2023)) nil (25632 61033 512811 726000) 0 nil])
([nil nil ((2023 . 2024)) nil (25632 61033 512810 925000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . -2023) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) 2024) nil (25632 61033 512809 693000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -2028) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (#("{" 0 1 (fontified t)) . -2029) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (#("}" 0 1 (fontified t)) . -2030) (undo-tree-id1520 . -1) (undo-tree-id1521 . 1) (undo-tree-id1522 . -1) 2031) nil (25632 61033 512805 677000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1873) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (#(">" 0 1 (fontified t)) . -1874) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (#(" " 0 1 (fontified t)) . -1875) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1876) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1877) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (#("." 0 1 (fontified t)) . -1878) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#("i" 0 1 (fontified t)) . -1879) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (#("n" 0 1 (fontified t)) . -1880) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (#("s" 0 1 (fontified t)) . -1881) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#("p" 0 1 (fontified t)) . -1882) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("e" 0 1 (fontified t)) . -1883) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (#("c" 0 1 (fontified t)) . -1884) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (#("t" 0 1 (fontified t)) . -1885) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#("(" 0 1 (fontified t)) . -1886) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (#(")" 0 1 (fontified t)) . -1887) (undo-tree-id1512 . -1) (undo-tree-id1513 . 1) (undo-tree-id1514 . -1) 1888) nil (25632 61033 512684 210000) 0 nil])
([nil nil ((2005 . 2009) (#("    " 0 4 (fontified t)) . 2004) (undo-tree-id1542 . -4) (2008 . 2009) (t 25632 61033 529149 878000)) nil (25632 61108 419522 958000) 0 nil])
([nil nil ((2009 . 2015)) nil (25632 61108 419518 81000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2012) (undo-tree-id1539 . -1) (#("i" 0 1 (fontified t)) . -2013) (undo-tree-id1540 . -1) (#("n" 0 1 (fontified t)) . -2014) (undo-tree-id1541 . -1) 2015) nil (25632 61108 419514 986000) 0 nil])
([nil nil ((2012 . 2014)) nil (25632 61108 419506 723000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2013) (undo-tree-id1538 . -1) 2014) nil (25632 61108 419504 119000) 0 nil])
([nil nil ((2013 . 2014)) nil (25632 61108 419499 943000) 0 nil])
([nil nil ((2013 . 2016) (#("n" 0 1 (fontified t)) . -2013) (undo-tree-id1537 . -1) 2014) nil (25632 61108 419496 598000) 0 nil])
([nil nil ((2017 . 2019) (2016 . 2018)) nil (25632 61108 419490 899000) 0 nil])
([nil nil ((2019 . 2037)) nil (25632 61108 419488 635000) 0 nil])
([nil nil ((2032 . 2041) (#("total" 0 5 (fontified t)) . -2032) (undo-tree-id1536 . -5) 2037) nil (25632 61108 419486 322000) 0 nil])
([nil nil ((2041 . 2043)) nil (25632 61108 419481 965000) 0 nil])
([nil nil ((2043 . 2060)) nil (25632 61108 419471 449000) 0 nil])
([nil nil ((1876 . 1884)) nil (25632 61108 419469 676000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1880) (undo-tree-id1532 . -1) (#("l" 0 1 (fontified t)) . -1881) (undo-tree-id1533 . -1) (#("t" 0 1 (fontified t)) . -1882) (undo-tree-id1534 . -1) (#("s" 0 1 (fontified t)) . -1883) (undo-tree-id1535 . -1) 1884) nil (25632 61108 419466 371000) 0 nil])
([nil nil ((1880 . 1885)) nil (25632 61108 419456 636000) 0 nil])
([nil nil ((1885 . 1893)) nil (25632 61108 419454 783000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1889) (undo-tree-id1528 . -1) (#("r" 0 1 (fontified t)) . -1890) (undo-tree-id1529 . -1) (#("d" 0 1 (fontified t)) . -1891) (undo-tree-id1530 . -1) (#("s" 0 1 (fontified t)) . -1892) (undo-tree-id1531 . -1) 1893) nil (25632 61108 419451 178000) 0 nil])
([nil nil ((1889 . 1891)) nil (25632 61108 419441 72000) 0 nil])
([nil nil ((2075 . 2079)) nil (25632 61108 419439 179000) 0 nil])
([nil nil ((2075 . 2086) (#("resu" 0 4 (fontified t)) . -2075) (undo-tree-id1527 . -4) 2079) nil (25632 61108 419435 474000) 0 nil])
([nil nil ((2087 . 2092)) nil (25632 61108 419429 394000) 0 nil])
([nil nil ((2092 . 2101)) nil (25632 61108 419426 860000) 0 nil])
([nil nil ((2098 . 2106) (#("ins" 0 3 (fontified t)) . -2098) (undo-tree-id1525 . -3) (undo-tree-id1526 . -3) 2101) nil (25632 61108 419422 804000) 0 nil])
([nil nil ((2106 . 2107) (#(")" 0 1 (fontified nil)) . -2106) (2106 . 2107)) nil (25632 61108 419396 854000) 0 nil])
([nil nil ((2095 . 2100) (t 25632 61108 440315 42000)) nil (25632 61158 617921 962000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2099) (undo-tree-id1543 . -1) (undo-tree-id1544 . 1) (undo-tree-id1545 . -1) 2100) nil (25632 61158 617918 136000) 0 nil])
([nil nil ((2111 . 2112) (#(")" 0 1 (fontified nil)) . -2111) (2111 . 2112)) nil (25632 61158 617896 312000) 0 nil])
([nil nil ((2110 . 2111)) nil (25632 61158 617893 178000) 0 nil])
([nil nil ((2111 . 2112)) nil (25632 61158 617889 943000) 0 nil])
([nil nil ((2099 . 2100)) nil (25632 61158 617882 40000) 0 nil])
([nil nil ((1154 . 1159) (t 25632 61158 635674 85000)) nil (25632 61245 460055 594000) 0 nil])
([nil nil ((1159 . 1162)) nil (25632 61245 460053 371000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1161) (undo-tree-id1603 . -1) 1162) nil (25632 61245 460051 227000) 0 nil])
([nil nil ((1131 . 1135) (#("    " 0 4 (fontified nil)) . 1130) (1130 . 1134) (1130 . 1131)) nil (25632 61245 460046 961000) 0 nil])
([nil nil ((1131 . 1135) (#("    " 0 4 (fontified nil)) . 1130) (1130 . 1134) (1130 . 1131)) nil (25632 61245 460043 616000) 0 nil])
([nil nil ((1135 . 1142)) nil (25632 61245 460040 651000) 0 nil])
([nil nil ((1138 . 1146) (#("insp" 0 4 (fontified t)) . -1138) (undo-tree-id1602 . -4) 1142) nil (25632 61245 460038 297000) 0 nil])
([nil nil ((1146 . 1150)) nil (25632 61245 460033 811000) 0 nil])
([nil nil ((1146 . 1151) (#("term" 0 4 (fontified t)) . -1146) (undo-tree-id1601 . -4) 1150) nil (25632 61245 460031 367000) 0 nil])
([nil nil ((1151 . 1152) (#(")" 0 1 (fontified nil)) . -1151) (1151 . 1152)) nil (25632 61245 460026 600000) 0 nil])
([nil nil ((1186 . 1187)) nil (25632 61245 460023 985000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1187) (undo-tree-id1598 . 1) (undo-tree-id1599 . 1) (#(" " 0 1 (fontified t)) . 1187) (undo-tree-id1600 . 1)) nil (25632 61245 460020 851000) 0 nil])
([nil nil ((1187 . 1188)) nil (25632 61245 460012 338000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1546 . 1) (undo-tree-id1547 . 1) (undo-tree-id1548 . 1) (undo-tree-id1549 . 1) (undo-tree-id1550 . 1) (undo-tree-id1551 . 1) (undo-tree-id1552 . 1) (undo-tree-id1553 . 1) (undo-tree-id1554 . 1) (undo-tree-id1555 . 1) (#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1556 . 1) (undo-tree-id1557 . 1) (undo-tree-id1558 . 1) (undo-tree-id1559 . 1) (undo-tree-id1560 . 1) (undo-tree-id1561 . 1) (undo-tree-id1562 . 1) (undo-tree-id1563 . 1) (undo-tree-id1564 . 1) (#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1565 . 1) (undo-tree-id1566 . 1) (undo-tree-id1567 . 1) (undo-tree-id1568 . 1) (undo-tree-id1569 . 1) (undo-tree-id1570 . 1) (undo-tree-id1571 . 1) (undo-tree-id1572 . 1) (#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1573 . 1) (undo-tree-id1574 . 1) (undo-tree-id1575 . 1) (undo-tree-id1576 . 1) (undo-tree-id1577 . 1) (undo-tree-id1578 . 1) (undo-tree-id1579 . 1) (#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1580 . 1) (undo-tree-id1581 . 1) (undo-tree-id1582 . 1) (undo-tree-id1583 . 1) (undo-tree-id1584 . 1) (undo-tree-id1585 . 1) (#(" " 0 1 (fontified t)) . 1188) (undo-tree-id1586 . 1) (undo-tree-id1587 . 1) (undo-tree-id1588 . 1) (undo-tree-id1589 . 1) (undo-tree-id1590 . 1) (#("
" 0 1 (fontified t)) . 1188) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . 1) (undo-tree-id1595 . 1) (undo-tree-id1596 . 1) (undo-tree-id1597 . 1)) nil (25632 61245 459998 266000) 0 nil])
([nil nil ((#("IO.inspect(terms)" 0 2 (fontified t face font-lock-type-face) 2 3 (fontified t) 3 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 1135) (undo-tree-id1633 . -17) (t 25632 61245 478883 491000)) nil (25632 61283 533281 654000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1135) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . 1) (undo-tree-id1632 . -1)) nil (25632 61283 533277 738000) 0 nil])
([nil nil ((#("    
" 0 5 (fontified t)) . 1135) (undo-tree-id1622 . -5) (undo-tree-id1623 . -5) (undo-tree-id1624 . -5) (undo-tree-id1625 . 5) (undo-tree-id1626 . 5) (undo-tree-id1627 . -5)) nil (25632 61283 533268 103000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1135) (undo-tree-id1604 . 1) (undo-tree-id1605 . 1) (undo-tree-id1606 . 1) (undo-tree-id1607 . 1) (undo-tree-id1608 . 1) (undo-tree-id1609 . 1) (#(" " 0 1 (fontified t)) . 1135) (undo-tree-id1610 . 1) (undo-tree-id1611 . 1) (undo-tree-id1612 . 1) (undo-tree-id1613 . 1) (undo-tree-id1614 . 1) (#(" " 0 1 (fontified t)) . 1135) (undo-tree-id1615 . 1) (undo-tree-id1616 . 1) (undo-tree-id1617 . 1) (undo-tree-id1618 . 1) (#(" " 0 1 (fontified t)) . 1135) (undo-tree-id1619 . 1) (undo-tree-id1620 . 1) (undo-tree-id1621 . 1)) nil (25632 61283 533251 447000) 0 nil])
([nil nil ((552 . 557) (t 25632 61283 558259 270000)) nil (25632 61323 387514 80000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -567) (567 . 568) (#(")" 0 1 (fontified nil)) . -567) (567 . 568) (557 . 568)) nil (25632 61323 387510 645000) 0 nil])
([nil nil ((567 . 568)) nil (25632 61323 387506 468000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -567) (undo-tree-id1635 . -1) 568) nil (25632 61323 387503 874000) 0 nil])
([nil nil ((567 . 568)) nil (25632 61323 387499 7000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -567) (undo-tree-id1634 . -1) 568) nil (25632 61323 387494 720000) 0 nil])
([nil nil ((567 . 568)) nil (25632 61323 387473 137000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -559) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (#(">" 0 1 (fontified t)) . -560) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#(" " 0 1 (fontified t)) . -561) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (#("e" 0 1 (fontified t)) . -562) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("l" 0 1 (fontified t)) . -563) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (#("e" 0 1 (fontified t)) . -564) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (#("m" 0 1 (fontified t)) . -565) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (#("(" 0 1 (fontified t)) . -566) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#("0" 0 1 (fontified t)) . -567) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#(")" 0 1 (fontified t)) . -568) (undo-tree-id1690 . -1) (undo-tree-id1691 . 1) (undo-tree-id1692 . -1) 569 (t 25632 61323 409047 785000)) nil (25632 61339 701044 27000) 0 nil])
([nil nil ((559 . 560) (t 25632 61339 711643 86000)) nil (25632 61778 977954 424000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -559) (undo-tree-id1698 . -1) 560) nil (25632 61778 977952 371000) 0 nil])
([nil nil ((559 . 563)) nil (25632 61778 977949 216000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . -559) (undo-tree-id1694 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -560) (undo-tree-id1695 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -561) (undo-tree-id1696 . -1) (#("." 0 1 (fontified t)) . -562) (undo-tree-id1697 . -1) 563) nil (25632 61778 977946 212000) 0 nil])
([nil nil ((559 . 569)) nil (25632 61778 977936 527000) 0 nil])
([nil nil ((566 . 572) (#("fet" 0 3 (fontified t)) . -566) (undo-tree-id1693 . -3) 569) nil (25632 61778 977934 223000) 0 nil])
([nil nil ((573 . 580) (572 . 574) (#("\"" 0 1 (fontified nil syntax-table (15))) . -572) (572 . 573)) nil (25632 61778 977919 280000) 0 nil])
([nil nil ((580 . 588)) nil (25632 61778 977916 25000) 0 nil])
([nil nil ((nil face font-lock-string-face 589 . 590) (nil fontified nil 589 . 590) (589 . 590) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -589) (589 . 590)) nil (25632 61778 977909 245000) 0 nil])
([nil nil ((571 . 572) (t 25632 61779 2007 866000)) nil (25632 61809 913 179000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -572) (undo-tree-id1704 . -1) 573 (t 25632 61809 4061 471000)) nil (25632 61836 850546 236000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -572) (undo-tree-id1703 . -1) 573) nil (25632 61836 850544 323000) 0 nil])
([nil nil ((572 . 574)) nil (25632 61836 850542 570000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -573) (undo-tree-id1700 . -1) (undo-tree-id1701 . 1) (undo-tree-id1702 . -1) 574) nil (25632 61836 850541 559000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -588) (undo-tree-id1699 . -1) 589) nil (25632 61836 850537 72000) 0 nil])
([nil nil ((588 . 589)) nil (25632 61836 850521 988000) 0 nil])
([nil nil ((589 . 590) (t 25632 61836 858826 952000)) nil (25632 61840 669494 638000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -588) (undo-tree-id1705 . -1) 589 (t 25632 61840 673562 276000)) nil (25632 61846 795391 29000) 0 nil])
([nil nil ((573 . 574)) nil (25632 61846 795368 705000) 0 nil])
([nil nil ((3773 . 3778) (t 25632 61846 803530 46000)) nil (25632 61887 937146 633000) 0 nil])
([nil nil ((3778 . 3793)) nil (25632 61887 937145 622000) 0 nil])
([nil nil ((3794 . 3807) (3793 . 3795)) nil (25632 61887 937144 901000) 0 nil])
([nil nil ((3807 . 3809)) nil (25632 61887 937143 499000) 0 nil])
([nil current ((3794 . 3795)) nil (25632 61887 937139 432000) 0 nil])
nil
